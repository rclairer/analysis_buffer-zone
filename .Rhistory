#data <- filter(data, Reef_type == "Natural", Depth_general == "Intermediate")
data <- fish_abund_matrix_both
env.end<- 10 #FOR SPECEIS
sp.start<-11 #FOR SPECIES
#env.end <- 29 #FOR FAMILY
#sp.start <- 30 #FOR FAMILY
#env.end <- 29 #FOR FUNCTIONAL GROUP
#sp.start <-30 #FOR FUNCTIONAL GROUP
# preserve biomass data for plotting
#biom_data<-merge(merge.2, fish_biom_matrix)
#biom_data <- filter(biom_data, Reef_type == "Artificial")
### REMOVE OUTLIER 200LE on 2014-07-01
#biom_data <- biom_data[-8,]
#biom_data <- biom_data[,sp.start:ncol(biom_data)]
env_data <- data[,1:env.end]
species.data<-data[,sp.start:ncol(data)] # fish data
species.orig<-species.data # fish data, no transform
#species.data <- transform_data (data = species.data, transform_type = "square_root")
#species.data <- transform_data (data = species.data, transform_type = "cube_root")
#species.data <- transform_data (data = species.data, transform_type = "pres_abs")
species.data <- transform_data (data = species.data, transform_type = "square_root_plus_number")
View(species.data)
data <- filter(env_data, Transect_Type == "Radiating")
env.end<- 10 #FOR SPECEIS
sp.start<-11 #FOR SPECIES
env_data <- data[,1:env.end]
species.data<-data[,sp.start:ncol(data)] # fish data
species.orig<-species.data # fish data, no transform
species.data <- transform_data (data = species.data, transform_type = "square_root_plus_number")
setwd("C:/Users/rclairer/Dropbox (Paxton)/Paxton Team Folder/CRFL - Artificial Reefs/Buffer_Zone/analysis_buffer-zone")
setwd("C:/Users/rclairer/Dropbox (Paxton)/Paxton Team Folder/CRFL - Artificial Reefs/Buffer_Zone/analysis_buffer-zone")
opts_chunk$set(echo = FALSE)
invisible(sapply(list.files(path = "R", pattern = "R$", full.names = TRUE), source)) # find functions and other dependencies in .R files
### FISH DATA ### --------------------------------------------------------------
detach("package:plyr", unload=TRUE)
library(dplyr)
library(lubridate)
library(reshape2)
fish_data <- read.csv ("Fish/4_clean_data/fish_clean_data_output_structure2.csv")
fish_data_reef <- filter(fish_data, Transect_Type == "Structural")
fish_data_reef <- filter(fish_data_reef, Transect_Number == "0")
fish_data_reef$Structure_Present <- "Yes"
fish_data_rad <- filter(fish_data, Transect_Type == "Radiating")
fish_data_structure <- filter(fish_data_rad, Structure_Present == "Yes")
fish_data_no <- filter(fish_data_rad, Structure_Present != "Yes")
fish_data_no$Structure_Present <- "No"
fish_data_both <- rbind(fish_data_structure, fish_data_no, fish_data_reef)
#fish_data_both <- filter(fish_data_both, Species_Code != "NOFI")
#fish_data_both_radiating <- filter(fish_data_both, Transect_Type == "Radiating")
#fish_data_nofi <- filter(fish_data, Species_Code == "NOFI")
#fish_data <- filter(fish_data, Species_Code != "NOFI")
#fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-364_PODS_2015-09-21_R_T2")
#fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-330_BARGE_2015-12-11_S_T0") #try adding back in
#fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-378_PODS_2015-09-14_R_T1")
#fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-364_BARGE_2015-12-10_R_T2")
#fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-372_NR2_2015-12-09_R_T5")
#fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-372_PODS_2015-12-09_R_T4")
#fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-372_RB1_2015-12-09_R_T3")
#fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-345_RB1_2015-10-15_R_T2")
#fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-345_RB2_2015-10-15_R_T3")
#fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-345_TITAN_2015-10-15_R_T3")
#fish_data_both_radiating <- filter(fish_data_both_radiating, Site == "330")
#fish_data <- filter(fish_data, Transect_Type == "Radiating")
fish_data_both <- filter(fish_data_both, ID != "AR-364_PODS_2015-09-21_R_T2")
#fish_data_both <- filter(fish_data_both, ID != "AR-330_BARGE_2015-12-11_S_T0") #try adding back in
fish_data_both <- filter(fish_data_both, ID != "AR-378_PODS_2015-09-14_R_T1")
fish_data_both <- filter(fish_data_both, ID != "AR-364_BARGE_2015-12-10_R_T2")
fish_data_both <- filter(fish_data_both, ID != "AR-372_NR2_2015-12-09_R_T5")
fish_data_both <- filter(fish_data_both, ID != "AR-372_PODS_2015-12-09_R_T4")
fish_data_both <- filter(fish_data_both, ID != "AR-372_RB1_2015-12-09_R_T3")
fish_data_both <- filter(fish_data_both, ID != "AR-345_RB1_2015-10-15_R_T2")
fish_data_both <- filter(fish_data_both, ID != "AR-345_RB2_2015-10-15_R_T3")
fish_data_both <- filter(fish_data_both, ID != "AR-345_TITAN_2015-10-15_R_T3")
#fish_meta_both <- combine_data_meta (data = fish_data_both_radiating,
#          file_meta = "Metadata/Fish/Fish_Codes_CRFL-AR.csv",
#         merge_by = "Species_Code")
fish_meta_both <- combine_data_meta (data = fish_data_both,
file_meta = "Metadata/Fish/Fish_Codes_CRFL-AR.csv",
merge_by = "Species_Code")
fish_meta_both <- filter(fish_meta_both, Pelagic.Demersal == "Demersal")
fish_meta_both <- filter(fish_meta_both, Water_Col_Position != "R_S_W", Water_Col_Position != "S_W", Water_Col_Position != "W")
fish_biom_both<-make_fish_biomass_col(data = fish_meta_both)
fish_meta_structure <- combine_data_meta (data = fish_data_structure,
file_meta = "Metadata/Fish/Fish_Codes_CRFL-AR.csv",
merge_by = "Species_Code")
fish_meta_structure <- filter(fish_meta_structure, Pelagic.Demersal == "Demersal")
fish_meta_structure <- filter(fish_meta_structure, Water_Col_Position != "R_S_W", Water_Col_Position != "S_W", Water_Col_Position != "W")
fish_meta_no <- combine_data_meta (data = fish_data_no,
file_meta = "Metadata/Fish/Fish_Codes_CRFL-AR.csv",
merge_by = "Species_Code")
fish_meta_no <- filter(fish_meta_no, Pelagic.Demersal == "Demersal")
#fish_meta_no <- filter(fish_meta_no, Water_Col_Position == "R")
fish_meta_no<-filter(fish_meta_no, Water_Col_Position != "R_S_W", Water_Col_Position != "S_W", Water_Col_Position != "W")
fish_biom_structure<-make_fish_biomass_col(data = fish_meta_structure)
fish_biom_no<-make_fish_biomass_col(data = fish_meta_no)
####################################################################
#fish_subset <- subset_data (data = fish_biom,
#sub_cat = "Pelagic.Demersal", #sub_cat = "Snapper.Grouper",
#sub_val = "Demersal") # YES for yes
## make fish abundance matrix
#fish_biom -> data
#data$group <- data[,"Species_Code"] # change to family or function_group as needed
#data$group <- data[,"Family"]
#data$group <- data[,"Functional_Group"]
#data$group <- data[,"Family"] #### FAMILY AND FUNCTIONAL GROUP DON"T WORK AS IS BECAUSE THERE ARE FISH WITHOUT FAMILIES AND FUNCTIONAL GROUPS MATCHING THEM...NEEDS FIXING"
#new2 <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_abund = sum(Abundance))
#new3 <- dcast(new2, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
#hi2 <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number, Structure_Present, Radiating_Structure) %>% summarise(data_abund = sum(Abundance))
#hi3 <- dcast(new2, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number + Structure_Present + Radiating_Structure ~ group)
#new3[is.na(new3)]<-0
#new4 = new3[rowSums(new3[,8:ncol(new3)]) !=0,] # remove rows where there were no fish on the transect - need this for species, family, and functional group levels
#fish_abund_matrix <- new4
fish_abund_matrix_both <- calc_fish_abund_matrix (data = fish_biom_both,
tax_level = "Species_Code")
#                                       #tax_level = "Family")
fish_abund_matrix_structure <- calc_fish_abund_matrix (data = fish_biom_structure,
tax_level = "Species_Code")
#                                       #tax_level = "Family")
fish_abund_matrix_no <- calc_fish_abund_matrix (data = fish_biom_no,
tax_level = "Species_Code")
#                                       #tax_level = "Family")
fish_biom_matrix_both <- calc_fish_biom_matrix (data = fish_biom_both,
tax_level = "Species_Code")
#                                            #tax_level = "Family")
#                                           tax_level = "Functional_Group")
fish_biom_matrix_structure <- calc_fish_biom_matrix (data = fish_biom_structure,
tax_level = "Species_Code")
#                                            #tax_level = "Family")
#                                           tax_level = "Functional_Group")
fish_biom_matrix_no <- calc_fish_biom_matrix (data = fish_biom_no,
tax_level = "Species_Code")
#                                            #tax_level = "Family")
#                                           tax_level = "Functional_Group")
#fish_abund_matrix <- rbind(fish_abund_matrix_structure, fish_abund_matrix_no)
#fish_biom_matrix <- rbind(fish_biom_matrix_structure, fish_biom_matrix_no)
# If at species level, bring meta data back in --> can't do if in wide format obviously!
#library(plyr)
#fish_abund <- rename(fish_abund, c("group"="Species_Code"))
#fish_abund <- combine_data_meta(data = fish_abund,
#file_meta = "Metadata/Fish/Fish_Codes.csv",
#merge_by = "Species_Code")
#fish <- fish_abund_matrix # select either abundance or biomass matrix
#fish <- remove_rare_species (data = fish) # remove rare species if desired
#rm(fish_data, fish_meta, fish_biom, fish_subset, fish_abund_matrix, fish_biom_matrix) # remove dataframes
### COMPLEXITY DATA ### -------------------------------------------------------
#comp <-read.table("Complexity/3_Clean_Data/comp_site_change.csv", header=T, sep=',')
### TEMPEATURE DATA ### -------------------------------------------------------
#temp <-read.table("Temperature/3_Clean_Data/temp_site_change.csv", header=T, sep=',')
### SITES METADATA ### ------------------------------------------------------------
#sites <-read.table("Metadata/Sites/CRFL-AR_SITES_Master_2016-06-30_new.csv", header=T, sep=',')
### MERGE DATA ### ------------------------------------------------------------
#library(plyr)
#join1 <- join(fish, temp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
#join2 <- join(join1, comp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
#join3 <- join(join2, sites, by = c("Site", "Subsite"))
#join4 <- cbind(join3[,1:8], join3[,91:114], join3[,9:90]) #FOR SPECIES crude way of rearranging so that columns are in decent order; it duplicates ID and names it ID.1 for the duplicate so delete that column later on
#join4 <- cbind(join3[,1:9], join3[,37:60], join3[,10:36]) #FOR FAMILY
#join4 <- cbind(join3[,1:9], join3[,17:40], join3[,10:16]) #FOR FUNCTIONAL GROUP
# new ones
#join4 <- cbind(join3[,1:7], join3[,88:111], join3[,8:87]) # species
#join4 <- cbind(join3[,1:7], join3[,40:ncol(join3)], join3[,8:39]) # family
#join4 <- cbind(join3[,1:7], join3[,16:ncol(join3)], join3[8:15]) #Functional group
#join5 <- join4[,-c(8, 12)] # FOR SPECIES
#join5 <- join4[,-c(8,12)] # FOR FAMILY
#join5 <- join4[,-c(8,12)] # FOR FUNCTIONAL GROUP
#data <- join5
#rm(list= ls()[!(ls() %in% c('data'))]) # removes everything except selected data frame(s)
## Filter data if necessary ## -------------------------------
#data <- filter(data, Reef_type == "Natural")
#data <- filter(data, Reef_type == "Artificial")
#data <- filter(data, Depth_general == "Shallow")
# data <- filter(data, Depth_general == "Shallow")
# data <- filter(data, Depth_general == "Deep")
#data <- filter(data, Reef_type == "Natural", Depth_general == "Intermediate")
data <- fish_abund_matrix_both
env.end<- 10 #FOR SPECEIS
sp.start<-11 #FOR SPECIES
#env.end <- 29 #FOR FAMILY
#sp.start <- 30 #FOR FAMILY
#env.end <- 29 #FOR FUNCTIONAL GROUP
#sp.start <-30 #FOR FUNCTIONAL GROUP
# preserve biomass data for plotting
#biom_data<-merge(merge.2, fish_biom_matrix)
#biom_data <- filter(biom_data, Reef_type == "Artificial")
### REMOVE OUTLIER 200LE on 2014-07-01
#biom_data <- biom_data[-8,]
#biom_data <- biom_data[,sp.start:ncol(biom_data)]
env_data <- data[,1:env.end]
species.data<-data[,sp.start:ncol(data)] # fish data
species.orig<-species.data # fish data, no transform
#species.data <- transform_data (data = species.data, transform_type = "square_root")
#species.data <- transform_data (data = species.data, transform_type = "cube_root")
#species.data <- transform_data (data = species.data, transform_type = "pres_abs")
species.data <- transform_data (data = species.data, transform_type = "square_root_plus_number")
library(indicspecies)
#IS IT OKAY TO USE SPECIES.ORIG?????
set.seed(318)
groups_transect <- env_data$Transect_Number
groups_transect <- as.factor(groups_transect)
B=strassoc(species.orig, cluster=groups_transect,func="B")
indval_transect <- multipatt(species.orig, groups_transect, control=how(nperm=999))
summary(indval_transect, indvalcomp = TRUE)
newdata <- filter(data, Transect_Type == "Radiating")
View(newdata)
env.end<- 10 #FOR SPECEIS
sp.start<-11 #FOR SPECIES
env_data.new <- newdata[,1:env.end]
species.data.new<-newdata[,sp.start:ncol(newdata)] # fish data
species.orig.new<-species.data.new # fish data, no transform
species.data.new <- transform_data (data = species.data.new, transform_type = "square_root_plus_number")
groups_struc <- env_data.new$Structure_Present
groups_struc <- as.factor(groups_struc)
B=strassoc(species.orig.new, cluster=groups_struc,func="B")
indval_struc <- multipatt(species.orig.new, groups_struc, control= how(nperm = 999))
summary(indval_struc)
View(B)
groups_struc
levels(groups_struc)
groups_struc <- filter(groups_struc, levels == "")
env_data.new_2 <- as.matrix(filter(env_data.new, Structure_Present == "Yes"))
env_data.new_2$Structure_Present
env_data.new_2 <- as.data.frame(filter(env_data.new, Structure_Present == "Yes"))
env_data.new_2$Structure_Present
levels(group_struc) <- c("Yes", "No")
groups_struc <- env_data.new$Structure_Present
levels(group_struc) <- c("Yes", "No")
levels(groups_struc) <- c("Yes", "No")
groups_struc <- as.character(groups_struc)
groups_strcu
groups_struc
B=strassoc(species.orig.new, cluster=groups_struc,func="B")
View(B)
indval_struc <- multipatt(species.orig.new, groups_struc, control= how(nperm = 999))
summary(indval_struc)
setwd("C:/Users/rclairer/Dropbox (Paxton)/Paxton Team Folder/CRFL - Artificial Reefs/Buffer_Zone/analysis_buffer-zone")
opts_chunk$set(echo = FALSE)
invisible(sapply(list.files(path = "R", pattern = "R$", full.names = TRUE), source)) # find functions and other dependencies in .R files
### FISH DATA ### --------------------------------------------------------------
detach("package:plyr", unload=TRUE)
library(dplyr)
library(lubridate)
library(reshape2)
fish_data <- read.csv ("Fish/4_clean_data/fish_clean_data_output_structure2.csv")
fish_data_reef <- filter(fish_data, Transect_Type == "Structural")
fish_data_reef <- filter(fish_data_reef, Transect_Number == "0")
fish_data_reef$Structure_Present <- "Yes"
fish_data_rad <- filter(fish_data, Transect_Type == "Radiating")
fish_data_structure <- filter(fish_data_rad, Structure_Present == "Yes")
fish_data_no <- filter(fish_data_rad, Structure_Present != "Yes")
fish_data_no$Structure_Present <- "No"
fish_data_both <- rbind(fish_data_structure, fish_data_no, fish_data_reef)
#fish_data_both <- filter(fish_data_both, Species_Code != "NOFI")
#fish_data_both_radiating <- filter(fish_data_both, Transect_Type == "Radiating")
#fish_data_nofi <- filter(fish_data, Species_Code == "NOFI")
#fish_data <- filter(fish_data, Species_Code != "NOFI")
#fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-364_PODS_2015-09-21_R_T2")
#fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-330_BARGE_2015-12-11_S_T0") #try adding back in
#fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-378_PODS_2015-09-14_R_T1")
#fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-364_BARGE_2015-12-10_R_T2")
#fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-372_NR2_2015-12-09_R_T5")
#fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-372_PODS_2015-12-09_R_T4")
#fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-372_RB1_2015-12-09_R_T3")
#fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-345_RB1_2015-10-15_R_T2")
#fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-345_RB2_2015-10-15_R_T3")
#fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-345_TITAN_2015-10-15_R_T3")
#fish_data_both_radiating <- filter(fish_data_both_radiating, Site == "330")
#fish_data <- filter(fish_data, Transect_Type == "Radiating")
fish_data_both <- filter(fish_data_both, ID != "AR-364_PODS_2015-09-21_R_T2")
#fish_data_both <- filter(fish_data_both, ID != "AR-330_BARGE_2015-12-11_S_T0") #try adding back in
fish_data_both <- filter(fish_data_both, ID != "AR-378_PODS_2015-09-14_R_T1")
fish_data_both <- filter(fish_data_both, ID != "AR-364_BARGE_2015-12-10_R_T2")
fish_data_both <- filter(fish_data_both, ID != "AR-372_NR2_2015-12-09_R_T5")
fish_data_both <- filter(fish_data_both, ID != "AR-372_PODS_2015-12-09_R_T4")
fish_data_both <- filter(fish_data_both, ID != "AR-372_RB1_2015-12-09_R_T3")
fish_data_both <- filter(fish_data_both, ID != "AR-345_RB1_2015-10-15_R_T2")
fish_data_both <- filter(fish_data_both, ID != "AR-345_RB2_2015-10-15_R_T3")
fish_data_both <- filter(fish_data_both, ID != "AR-345_TITAN_2015-10-15_R_T3")
#fish_meta_both <- combine_data_meta (data = fish_data_both_radiating,
#          file_meta = "Metadata/Fish/Fish_Codes_CRFL-AR.csv",
#         merge_by = "Species_Code")
fish_meta_both <- combine_data_meta (data = fish_data_both,
file_meta = "Metadata/Fish/Fish_Codes_CRFL-AR.csv",
merge_by = "Species_Code")
fish_meta_both <- filter(fish_meta_both, Pelagic.Demersal == "Demersal")
fish_meta_both <- filter(fish_meta_both, Water_Col_Position != "R_S_W", Water_Col_Position != "S_W", Water_Col_Position != "W")
fish_biom_both<-make_fish_biomass_col(data = fish_meta_both)
fish_meta_structure <- combine_data_meta (data = fish_data_structure,
file_meta = "Metadata/Fish/Fish_Codes_CRFL-AR.csv",
merge_by = "Species_Code")
fish_meta_structure <- filter(fish_meta_structure, Pelagic.Demersal == "Demersal")
fish_meta_structure <- filter(fish_meta_structure, Water_Col_Position != "R_S_W", Water_Col_Position != "S_W", Water_Col_Position != "W")
fish_meta_no <- combine_data_meta (data = fish_data_no,
file_meta = "Metadata/Fish/Fish_Codes_CRFL-AR.csv",
merge_by = "Species_Code")
fish_meta_no <- filter(fish_meta_no, Pelagic.Demersal == "Demersal")
#fish_meta_no <- filter(fish_meta_no, Water_Col_Position == "R")
fish_meta_no<-filter(fish_meta_no, Water_Col_Position != "R_S_W", Water_Col_Position != "S_W", Water_Col_Position != "W")
fish_biom_structure<-make_fish_biomass_col(data = fish_meta_structure)
fish_biom_no<-make_fish_biomass_col(data = fish_meta_no)
####################################################################
#fish_subset <- subset_data (data = fish_biom,
#sub_cat = "Pelagic.Demersal", #sub_cat = "Snapper.Grouper",
#sub_val = "Demersal") # YES for yes
## make fish abundance matrix
#fish_biom -> data
#data$group <- data[,"Species_Code"] # change to family or function_group as needed
#data$group <- data[,"Family"]
#data$group <- data[,"Functional_Group"]
#data$group <- data[,"Family"] #### FAMILY AND FUNCTIONAL GROUP DON"T WORK AS IS BECAUSE THERE ARE FISH WITHOUT FAMILIES AND FUNCTIONAL GROUPS MATCHING THEM...NEEDS FIXING"
#new2 <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_abund = sum(Abundance))
#new3 <- dcast(new2, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
#hi2 <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number, Structure_Present, Radiating_Structure) %>% summarise(data_abund = sum(Abundance))
#hi3 <- dcast(new2, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number + Structure_Present + Radiating_Structure ~ group)
#new3[is.na(new3)]<-0
#new4 = new3[rowSums(new3[,8:ncol(new3)]) !=0,] # remove rows where there were no fish on the transect - need this for species, family, and functional group levels
#fish_abund_matrix <- new4
fish_abund_matrix_both <- calc_fish_abund_matrix (data = fish_biom_both,
tax_level = "Species_Code")
#                                       #tax_level = "Family")
fish_abund_matrix_structure <- calc_fish_abund_matrix (data = fish_biom_structure,
tax_level = "Species_Code")
#                                       #tax_level = "Family")
fish_abund_matrix_no <- calc_fish_abund_matrix (data = fish_biom_no,
tax_level = "Species_Code")
#                                       #tax_level = "Family")
fish_biom_matrix_both <- calc_fish_biom_matrix (data = fish_biom_both,
tax_level = "Species_Code")
#                                            #tax_level = "Family")
#                                           tax_level = "Functional_Group")
fish_biom_matrix_structure <- calc_fish_biom_matrix (data = fish_biom_structure,
tax_level = "Species_Code")
#                                            #tax_level = "Family")
#                                           tax_level = "Functional_Group")
fish_biom_matrix_no <- calc_fish_biom_matrix (data = fish_biom_no,
tax_level = "Species_Code")
#                                            #tax_level = "Family")
#                                           tax_level = "Functional_Group")
#fish_abund_matrix <- rbind(fish_abund_matrix_structure, fish_abund_matrix_no)
#fish_biom_matrix <- rbind(fish_biom_matrix_structure, fish_biom_matrix_no)
# If at species level, bring meta data back in --> can't do if in wide format obviously!
#library(plyr)
#fish_abund <- rename(fish_abund, c("group"="Species_Code"))
#fish_abund <- combine_data_meta(data = fish_abund,
#file_meta = "Metadata/Fish/Fish_Codes.csv",
#merge_by = "Species_Code")
#fish <- fish_abund_matrix # select either abundance or biomass matrix
#fish <- remove_rare_species (data = fish) # remove rare species if desired
#rm(fish_data, fish_meta, fish_biom, fish_subset, fish_abund_matrix, fish_biom_matrix) # remove dataframes
### COMPLEXITY DATA ### -------------------------------------------------------
#comp <-read.table("Complexity/3_Clean_Data/comp_site_change.csv", header=T, sep=',')
### TEMPEATURE DATA ### -------------------------------------------------------
#temp <-read.table("Temperature/3_Clean_Data/temp_site_change.csv", header=T, sep=',')
### SITES METADATA ### ------------------------------------------------------------
#sites <-read.table("Metadata/Sites/CRFL-AR_SITES_Master_2016-06-30_new.csv", header=T, sep=',')
### MERGE DATA ### ------------------------------------------------------------
#library(plyr)
#join1 <- join(fish, temp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
#join2 <- join(join1, comp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
#join3 <- join(join2, sites, by = c("Site", "Subsite"))
#join4 <- cbind(join3[,1:8], join3[,91:114], join3[,9:90]) #FOR SPECIES crude way of rearranging so that columns are in decent order; it duplicates ID and names it ID.1 for the duplicate so delete that column later on
#join4 <- cbind(join3[,1:9], join3[,37:60], join3[,10:36]) #FOR FAMILY
#join4 <- cbind(join3[,1:9], join3[,17:40], join3[,10:16]) #FOR FUNCTIONAL GROUP
# new ones
#join4 <- cbind(join3[,1:7], join3[,88:111], join3[,8:87]) # species
#join4 <- cbind(join3[,1:7], join3[,40:ncol(join3)], join3[,8:39]) # family
#join4 <- cbind(join3[,1:7], join3[,16:ncol(join3)], join3[8:15]) #Functional group
#join5 <- join4[,-c(8, 12)] # FOR SPECIES
#join5 <- join4[,-c(8,12)] # FOR FAMILY
#join5 <- join4[,-c(8,12)] # FOR FUNCTIONAL GROUP
#data <- join5
#rm(list= ls()[!(ls() %in% c('data'))]) # removes everything except selected data frame(s)
## Filter data if necessary ## -------------------------------
#data <- filter(data, Reef_type == "Natural")
#data <- filter(data, Reef_type == "Artificial")
#data <- filter(data, Depth_general == "Shallow")
# data <- filter(data, Depth_general == "Shallow")
# data <- filter(data, Depth_general == "Deep")
#data <- filter(data, Reef_type == "Natural", Depth_general == "Intermediate")
data <- fish_abund_matrix_both
env.end<- 10 #FOR SPECEIS
sp.start<-11 #FOR SPECIES
#env.end <- 29 #FOR FAMILY
#sp.start <- 30 #FOR FAMILY
#env.end <- 29 #FOR FUNCTIONAL GROUP
#sp.start <-30 #FOR FUNCTIONAL GROUP
# preserve biomass data for plotting
#biom_data<-merge(merge.2, fish_biom_matrix)
#biom_data <- filter(biom_data, Reef_type == "Artificial")
### REMOVE OUTLIER 200LE on 2014-07-01
#biom_data <- biom_data[-8,]
#biom_data <- biom_data[,sp.start:ncol(biom_data)]
env_data <- data[,1:env.end]
species.data<-data[,sp.start:ncol(data)] # fish data
species.orig<-species.data # fish data, no transform
#species.data <- transform_data (data = species.data, transform_type = "square_root")
#species.data <- transform_data (data = species.data, transform_type = "cube_root")
#species.data <- transform_data (data = species.data, transform_type = "pres_abs")
species.data <- transform_data (data = species.data, transform_type = "square_root_plus_number")
library(ggplot2)
library(plyr)
library(dplyr)
#fishabundance <- mutate(data, Abundance = rowSums(data[,30:ncol(data)]))
#fishabundstruc <- mutate(fish_abund_matrix_structure, Abundance = rowSums(fish_abund_matrix_structure[,11:ncol(fish_abund_matrix_structure)]))
#fishabundno <- mutate(fish_abund_matrix_no, Abundance = rowSums(fish_abund_matrix_no[,11:ncol(fish_abund_matrix_no)]))
fishabundance <- mutate(data, Abundance = rowSums(data[,11:ncol(data)]))
#test <- summarySE(fishabundance, measurevar = "Abundance", groupvars = c("Transect_Number", "Sampling_Period"))
#struc <- summarySE(fishabundstruc, measurevar = "Abundance", groupvars = c("Transect_Number"))
#no <- summarySE(fishabundno, measurevar = "Abundance", groupvars = c("Transect_Number"))
both <- summarySE(fishabundance, measurevar = "Abundance", groupvars = c("Transect_Number", "Structure_Present"))
################################################################################
#ggplot(struc, aes(x=as.factor(Transect_Number), y=Abundance))+
#  theme_classic()+
#  geom_bar(position=position_dodge(), stat="identity", colour="black")+
#  geom_errorbar(aes(ymin=Abundance-se, ymax=Abundance+se), width=.2, position=position_dodge(0.9))+
#  scale_y_continuous(name="Average Fish Abundance",
#                    limits=c(0, 500),
#                     breaks=seq(0, 500,by=100)) +
#  theme(axis.text=element_text(size=16, colour="black"),
#        axis.title.x=element_text(size=16, colour="black", vjust=-.5),
#        axis.title.y=element_text(size=16, colour="black", vjust=1.3),
#        legend.position="none") +
#  scale_x_discrete(name = "Transect Type", labels = c("0" = "Structural", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))
#ggplot(no, aes(x=as.factor(Transect_Number), y=Abundance))+
# theme_classic()+
#geom_bar(position=position_dodge(), stat="identity", colour="black")+
#  geom_errorbar(aes(ymin=Abundance-se, ymax=Abundance+se), width=.2, position=position_dodge(0.9))+
#  scale_y_continuous(name="Average Fish Abundance",
#                    limits=c(0, 500),
#                   breaks=seq(0, 500,by=100)) +
#  theme(axis.text=element_text(size=16, colour="black"),
#       axis.title.x=element_text(size=16, colour="black", vjust=-.5),
#      axis.title.y=element_text(size=16, colour="black", vjust=1.3),
#     legend.position="none") +
#scale_x_discrete(name = "Transect Type", labels = c("0" = "Structural", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))
##################################################################################
#struc$Structure <- "Yes"
#no$Structure <- "No"
#allstrucno <- rbind(no, struc)
#allstrucno [1,7] <- "Yes"
###################################################################################
#allstrucno.plot = ggplot(allstrucno, aes(x=as.factor(Transect_Number), y=Abundance), fill = name)
#allstrucno.plot + geom_bar (stat = "identity", position = "dodge") +theme_classic () +
#geom_bar(position=position_dodge(), stat="identity", colour="black")+
#geom_errorbar(aes(ymin=Abundance-se, ymax=Abundance+se), width=.2, position=position_dodge(0.9))+
# scale_y_continuous(name="Average Fish Abundance",
#                   limits=c(0, 700),
#                  breaks=seq(0, 700,by=100)) +
#theme(axis.text=element_text(size=16, colour="black"),
#     axis.title.x=element_text(size=16, colour="black", vjust=-.5),
#    axis.title.y=element_text(size=16, colour="black", vjust=1.3),
#   legend.position="bottom") +
#  scale_x_discrete(name = "Transect Type", labels = c("0" = "Structural", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))
#######################################################################################
#transparent <- ggplot(NULL, aes(as.factor(Transect_Number), Abundance)) +
# geom_bar(aes(fill = "Yes"), data = struc, stat = "identity", alpha = 0.5) +
#geom_bar(aes(fill = "No"), data = no, stat = "identity", alpha = 0.5)
#transparent + theme_classic()
#####################################################################################
#adjacent <- ggplot(allstrucno, aes(as.factor(Transect_Number), Abundance, fill = Structure)) + geom_bar(stat = "identity", position = "dodge")
#adjacent + theme_classic()
#####################################################################################
#allstrucno_test <- rbind(allstrucno[1,], allstrucno[5:7,], allstrucno[2:4,])
#allstrucno$name <- factor(allstrucno$name, c("no", "struc"))
#order levels of treatment to appear orderly in plots
#allstrucno_test$abund <- c(allstrucno_test[1,3], allstrucno_test[2,3], allstrucno_test[3,3], allstrucno_test[4,3], (allstrucno_test[5,3]+ allstrucno_test[2,3]), (allstrucno_test[6,3]+allstrucno_test[3,3]), (allstrucno_test[7,3]+allstrucno_test[4,3]))
#stack <- ggplot(allstrucno_test, aes(as.factor(Transect_Number), Abundance, fill = Structure)) + geom_bar(stat = "identity", position = "stack")
#stack + theme_classic()+ ggtitle("Demersal Fish Abundance on Structure")+
##########geom_errorbar(aes(ymin=Abundance-se, ymax=Abundance+se), width=.2)+#, position=position_dodge(0.9))+
# scale_y_continuous(name="Average Fish Abundance",
#                   limits=c(0, 250),
#                  breaks=seq(0, 250,by=50)) +
#  theme(axis.text=element_text(size=16, colour="black"),
#       axis.title.x=element_text(size=16, colour="black", vjust=-.5),
#      axis.title.y=element_text(size=16, colour="black", vjust=1.3),
#     legend.position="bottom") +
# scale_x_discrete(name = "Transect Type", labels = c("0" = "Structural", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
########## geom_errorbar(aes(ymin=abund-se, ymax=abund+se), position = "identity", width=.2)
#  geom_errorbar(aes(ymin=abund-se, ymax=abund+se), position = position_dodge(0.5), width=.2)
both$abund <- c(both[1,4], both[2,4], (both[3,4]+both[2,4]), both[4,4], (both[5,4]+both[4,4]), both[6,4], (both[7,4]+both[6,4]))
stackboth <- ggplot(both, aes(as.factor(Transect_Number), Abundance, fill = Structure_Present)) + geom_bar(stat = "identity", position = "stack")
stackboth + theme_classic()+ ggtitle("Demersal Fish Abundance Associated with Structure")+
#geom_errorbar(aes(ymin=Abundance-se, ymax=Abundance+se), width=.2)+#, position=position_dodge(0.9))+
scale_y_continuous(name="Average Fish Abundance",
limits=c(0, 300),
breaks=seq(0, 300,by=50)) +
theme(axis.text=element_text(size=16, colour="black"),
axis.title.x=element_text(size=16, colour="black", vjust=-.5),
axis.title.y=element_text(size=16, colour="black", vjust=1.3),
legend.position="bottom",
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
scale_fill_discrete(name= "Structure Present")+
# scale_fill_manual(name= "Structure Present", values= c("Yes"= "grey20", "No" = "grey50"))+
# geom_errorbar(aes(ymin=abund-se, ymax=abund+se), position = "identity", width=.2)
geom_errorbar(aes(ymin=abund-se, ymax=abund+se), position = position_dodge(0.5), width=.2)
fillboth <- ggplot(both, aes(as.factor(Transect_Number), Abundance, fill = Structure_Present)) + geom_bar(stat = "identity", position = "fill")
fillboth + theme_classic()+ ggtitle("Proportion of Demersal Fish Abundance Associated with Structure")+
#scale_y_continuous(name="Average Fish Abundance",
# limits=c(0, 250),
# breaks=seq(0, 250,by=50)) +
theme(axis.text=element_text(size=16, colour="black"),
axis.title.x=element_text(size=16, colour="black", vjust=-.5),
axis.title.y=element_text(size=16, colour="black", vjust=1.3),
legend.position="bottom",
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
scale_fill_discrete(name= "Structure Present")#+
#scale_fill_manual(name = "Structure Present", values = c("Yes" = "grey20", "No" = "grey50"))
# geom_errorbar(aes(ymin=abund-se, ymax=abund+se), position = "identity", width=.2)
#geom_errorbar(aes(ymin=abund-se, ymax=abund+se), position = position_dodge(0.5), width=.2)
