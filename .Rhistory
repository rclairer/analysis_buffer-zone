new2biomtessst <- data %>% group_by(group, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_biom = sum(biomass))
#new3biom <- dcast(new2biom, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
new3biomtessst <- dcast(new2biomtessst, Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
#FOR VISIBILITY
#new2 <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number, Visibility_Min_ft) %>% summarise(data_abund = sum(Abundance))
#new3 <- dcast(new2, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number + Visibility_Min_ft ~ group)
#new3[is.na(new3)]<-0
new3tessssst[is.na(new3tessssst)]<-0
#new3biom[is.na(new3biom)] <- 0
new3biomtessst[is.na(new3biomtessst)] <- 0
#fish_abund_matrix <- new3
fish_abund_matrix <- new3tessssst
#fish_biom_matrix <- new3biom
fish_biom_matrix <- new3biomtessst
fish <- fish_abund_matrix # select either abundance or biomass matrix
fishbiom <- fish_biom_matrix
### COMPLEXITY DATA ### -------------------------------------------------------
comp <-read.table("Complexity/3_Clean_Data/comp_site_change.csv", header=T, sep=',')
### TEMPEATURE DATA ### -------------------------------------------------------
temp <-read.table("Temperature/3_Clean_Data/temp_site_change.csv", header=T, sep=',')
### SITES METADATA ### ------------------------------------------------------------
#sites <-read.table("Metadata/Sites/CRFL-AR_SITES_Master_2016-06-30_new.csv", header=T, sep=',')
sites <-read.table("Metadata/Sites/CRFL-AR_SITES_Master_2017-01-23.csv", header=T, sep=',')
### MERGE DATA ### ------------------------------------------------------------
library(plyr)
join1 <- join(fish, temp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
join2 <- join(join1, comp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
join3 <- join(join2, sites, by = c("Site", "Subsite"))
joinbiom1 <- join(fishbiom, temp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
joinbiom2 <- join(joinbiom1, comp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
joinbiom3 <- join(joinbiom2, sites, by = c("Site", "Subsite"))
#join4 <- cbind(join3[,1:7], join3[,81:110], join3[,8:80]) # species
join4 <- cbind(join3[,1:6], join3[,80:110], join3[,7:79]) # species
#join4 <- cbind(join3[,1:6], join3[,79:108], join3[,7:78]) # species NOFI excluded
#join4 <- cbind(join3[,1:7], join3[,80:109], join3[,8:79]) #for exclusion of NOFI
#join4 <- cbind(join3[,1:7], join3[,79:102], join3[,8:78]) #for exclusion of 2 and 3 and no fi
#join4 <- cbind(join3[,1:7], join3[,72:95], join3[,8:71]) # for exclusion of 1 and 2
#joinbiom4 <- cbind(joinbiom3[,1:7], joinbiom3[,81:110], joinbiom3[,8:80])
joinbiom4 <- cbind(joinbiom3[,1:6], joinbiom3[,80:110], joinbiom3[,7:79])
#joinbiom4 <- cbind(joinbiom3[,1:6], joinbiom3[,79:108], joinbiom3[,7:78]) #NOFI excluded
#joinbiom4 <- cbind(joinbiom3[,1:7], joinbiom3[,80:109], joinbiom3[,8:79])#for exclusion of NOFI
#joinbiom4 <- cbind(joinbiom3[,1:7], joinbiom3[,79:102], joinbiom3[,8:80])#for exclusion of 2 and 3
#joinbiom4 <- cbind(join3[,1:7], join3[,72:95], join3[,8:71]) # for exclusion of 1 and 2
#join4 <- cbind(join3[,1:7], join3[,36:ncol(join3)], join3[,8:35]) # family
#join4 <- cbind(join3[,1:7], join3[,16:ncol(join3)], join3[8:15]) #Functional group
#join5 <- join4[,-c(8, 12)]
join5 <- join4[,-c(11)]
#joinbiom5 <- joinbiom4[,-c(8, 12)]
joinbiom5 <- joinbiom4[,-c(11)]
data <- join5
databiom <- joinbiom5
env.end<- 36
sp.start<-37
env_data <- data[,1:env.end]
species.data<-data[,sp.start:ncol(data)] # fish data
species.orig<-species.data # fish data, no transform
species.data.biom <- databiom[,sp.start:ncol(databiom)]
species.orig.biom <- species.data.biom
#species.data <- transform_data (data = species.data, transform_type = "square_root")
#species.data.biom <- transform_data (data = species.data.biom, transform_type =
species.data <- transform_data (data = species.orig, transform_type = "fourth_root")
species.data.biom <- transform_data (data = species.orig.biom, transform_type = "fourth_root")
#species.data <- transform_data (data = species.orig, transform_type = "log")
library(vegan)
S <- specnumber(species.data) # species richness (S)
shan <- diversity (species.data, index = "shannon") # shannon diversity
simp <- diversity (species.data, index = "simpson") # simpson's diversity
simp_inv <- diversity (species.data, index = "invsimpson") # inverse simpson's diversity
J <- shan / log (S) # pielou's evenness (J)
abund <- rowSums (species.data, na.rm = FALSE, dims = 1) # total abundance for each sample
biom <- rowSums (species.data.biom, na.rm = FALSE, dims = 1) # totaal biomass for each sample
comm_mets <- cbind (abund, biom, S, shan, simp, simp_inv, J, env_data)
abundpertran <- summarySE(comm_mets, measurevar = "abund", groupvars = c("Transect_Number"))
abundpertran$Transect_Number <- as.numeric(abundpertran$Transect_Number)
abundpertran$abund <- as.numeric(abundpertran$abund)
x <- c(0,1,2,3)
y <- abundpertran$abund
#m<-nls(y~a*x/(b+x), start = list(a= 13, b=1))
m <- nls(y~a*exp(-b*x), start = list(a= 13, b = 1))
cor(y, predict(m))
lines(x,predict(m),col="red",lty=2,lwd=3)
plot(abundpertran$Transect_Number, abundpertran$abund)
lines(x,predict(m),col="red",lty=2,lwd=3)
m <- nls(y~a*exp(-b*x), start = list(a= 13, b =0.9))
cor(y, predict(m))
plot(abundpertran$Transect_Number, abundpertran$abund)
lines(x,predict(m),col="red",lty=2,lwd=3)
m <- nls(y~a*exp(-b*x), start = list(a= 13, b =1.1))
cor(y, predict(m))
plot(abundpertran$Transect_Number, abundpertran$abund)
lines(x,predict(m),col="red",lty=2,lwd=3)
m <- nls(y~a*exp(-b*x), start = list(a= 13, b =2))
cor(y, predict(m))
plot(abundpertran$Transect_Number, abundpertran$abund)
lines(x,predict(m),col="red",lty=2,lwd=3)
m <- nls(y~a*exp(-b*x), start = list(a= 13, b =1))
cor(y, predict(m))
plot(abundpertran$Transect_Number, abundpertran$abund)
lines(x,predict(m),col="red",lty=2,lwd=3)
m <- nls(y~a*exp(-b*x), start = list(a= 13, b =10))
cor(y, predict(m))
plot(abundpertran$Transect_Number, abundpertran$abund)
lines(x,predict(m),col="red",lty=2,lwd=3)
m <- nls(y~a*exp(-b*x), start = list(a= 13, b =5))
m <- nls(y~a*exp(-b*x), start = list(a= 13, b =4))
m <- nls(y~a*exp(-b*x), start = list(a= 13, b =2))
cor(y, predict(m))
m <- nls(y~a*exp(-b*x), start = list(a= 13, b =3))
cor(y, predict(m))
plot(abundpertran$Transect_Number, abundpertran$abund)
lines(x,predict(m),col="red",lty=2,lwd=3)
m <- nls(y~a*exp(-b*x), start = list(a= 13, b =1))
cor(y, predict(m))
plot(abundpertran$Transect_Number, abundpertran$abund)
lines(x,predict(m),col="red",lty=2,lwd=3)
library(ggplot2)
comm_mets$Sampling_Period <- factor(comm_mets$Sampling_Period, c("Fall", "Winter", "Spring"))
plot.taketwo = ggplot(comm_mets, aes(x = as.factor(Transect_Number), y = as.numeric(abund)))
library(ggrepel)
plot.taketwo+
theme_classic()+
facet_wrap(~Sampling_Period, ncol=3)+
theme(axis.text=element_text(size=16, colour="black"),
axis.title.x=element_text(size=16, colour="black", vjust=-.5),
axis.title.y=element_text(size=16, colour="bSlack", vjust=1.3),
legend.position="none",
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
plot.title = element_text(size = 16, hjust = 0.5))+
#abline(lm(abund ~ as.numeric(Transect_Number), data= abundanceddd))+
#geom_point (colour = "grey") +
# geom_point (aes(colour = GIS_FID)) +
#geom_point(aes(colour = Sampling_Period))+
geom_point()+
#geom_line(aes(group = interaction(Site, Subsite, Date), linetype = Sampling_Period))+
geom_line(aes(group = interaction(GIS_FID, Date, Sampling_Period)))+
#  guide_legend(title.position = "bottom")+
#geom_dl(aes(label = GIS_FID))+
#geom_text(data = subset(comm_mets, Transect_Number == "0"), aes(label = Table_ID), hjust = 1.5, check_overlap = TRUE)+#, x = 4, colour = GIS_FID , y = c(m), hjust = -.02))
#geom_text_repel(data = subset(comm_mets, Transect_Number == "0"), aes(label = Table_ID), nudge_x = 1.5, force = 1)+
geom_text_repel(data = subset(comm_mets, Transect_Number == "0"), aes(label = Table_ID), nudge_x = -0.25, force = 0.01, segment.color = "gray45")+
# geom_smooth (aes(colour = GIS_FID)) +
#geom_errorbar(aes(ymin=abund-se, ymax=abund+se), width=.05, position=position_dodge(0.9))+
scale_y_continuous(name="Fish Abundance", limits=c(0, 35), breaks=seq(0, 35, by=5)) +
#scale_x_continuous(name = "Distance (km)", limits=c(0, 120), breaks=seq(0, 120,by=20)) + geom_smooth(colour = "black", fullrange = FALSE)+
scale_linetype_discrete(name = "Season", size = 16)+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
ggtitle("Fish Abundance by Distance from Reef per Season")
plot.taketwo+
theme_classic()+
facet_wrap(~Sampling_Period, ncol=3)+
theme(axis.text=element_text(size=16, colour="black"),
axis.title.x=element_text(size=16, colour="black", vjust=-.5),
axis.title.y=element_text(size=16, colour="bSlack", vjust=1.3),
legend.position="none",
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
plot.title = element_text(size = 16, hjust = 0.5))+
#abline(lm(abund ~ as.numeric(Transect_Number), data= abundanceddd))+
#geom_point (colour = "grey") +
# geom_point (aes(colour = GIS_FID)) +
#geom_point(aes(colour = Sampling_Period))+
geom_point()+
#geom_line(aes(group = interaction(Site, Subsite, Date), linetype = Sampling_Period))+
geom_line(aes(group = interaction(GIS_FID, Date, Sampling_Period)))+
#  guide_legend(title.position = "bottom")+
#geom_dl(aes(label = GIS_FID))+
#geom_text(data = subset(comm_mets, Transect_Number == "0"), aes(label = Table_ID), hjust = 1.5, check_overlap = TRUE)+#, x = 4, colour = GIS_FID , y = c(m), hjust = -.02))
#geom_text_repel(data = subset(comm_mets, Transect_Number == "0"), aes(label = Table_ID), nudge_x = 1.5, force = 1)+
geom_text_repel(data = subset(comm_mets, Transect_Number == "0"), aes(label = Table_ID), nudge_x = -0.25, force = 0.01, segment.color = "gray45")+
# geom_smooth (aes(colour = GIS_FID)) +
#geom_errorbar(aes(ymin=abund-se, ymax=abund+se), width=.05, position=position_dodge(0.9))+
scale_y_continuous(name="Fish Abundance", limits=c(0, 35), breaks=seq(0, 35, by=5)) +
#scale_x_continuous(name = "Distance (km)", limits=c(0, 120), breaks=seq(0, 120,by=20)) + geom_smooth(colour = "black", fullrange = FALSE)+
# scale_linetype_discrete(name = "Season", size = 16)+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
ggtitle("Fish Abundance by Distance from Reef per Season")
plot.taketwo+
theme_classic()+
facet_wrap(~Sampling_Period, ncol=3)+
theme(axis.text=element_text(size=16, colour="black"),
axis.title.x=element_text(size=16, colour="black", vjust=-.5),
axis.title.y=element_text(size=16, colour="black", vjust=1.3),
legend.position="none",
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
plot.title = element_text(size = 16, hjust = 0.5))+
#abline(lm(abund ~ as.numeric(Transect_Number), data= abundanceddd))+
#geom_point (colour = "grey") +
# geom_point (aes(colour = GIS_FID)) +
#geom_point(aes(colour = Sampling_Period))+
geom_point()+
#geom_line(aes(group = interaction(Site, Subsite, Date), linetype = Sampling_Period))+
geom_line(aes(group = interaction(GIS_FID, Date, Sampling_Period)))+
#  guide_legend(title.position = "bottom")+
#geom_dl(aes(label = GIS_FID))+
#geom_text(data = subset(comm_mets, Transect_Number == "0"), aes(label = Table_ID), hjust = 1.5, check_overlap = TRUE)+#, x = 4, colour = GIS_FID , y = c(m), hjust = -.02))
#geom_text_repel(data = subset(comm_mets, Transect_Number == "0"), aes(label = Table_ID), nudge_x = 1.5, force = 1)+
geom_text_repel(data = subset(comm_mets, Transect_Number == "0"), aes(label = Table_ID), nudge_x = -0.25, force = 0.01, segment.color = "gray45")+
# geom_smooth (aes(colour = GIS_FID)) +
#geom_errorbar(aes(ymin=abund-se, ymax=abund+se), width=.05, position=position_dodge(0.9))+
scale_y_continuous(name="Fish Abundance", limits=c(0, 35), breaks=seq(0, 35, by=5)) +
#scale_x_continuous(name = "Distance (km)", limits=c(0, 120), breaks=seq(0, 120,by=20)) + geom_smooth(colour = "black", fullrange = FALSE)+
# scale_linetype_discrete(name = "Season", size = 16)+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
ggtitle("Fish Abundance by Distance from Reef per Season")
abundpertran <- summarySE(comm_mets, measurevar = "abund", groupvars = c("Transect_Number"))
plot.all.tran = ggplot(abundpertran, aes(x=as.factor(Transect_Number), y=as.numeric(abund), group = 1))
plot.all.tran +
theme_classic()+
theme(axis.text=element_text(size=16, colour="black"),
axis.title.x=element_text(size=16, colour="black", vjust=-.5),
axis.title.y=element_text(size=16, colour="black", vjust=1.3),
legend.position="none",
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
plot.title = element_text(size = 16, hjust = 0.5))+
geom_point (colour = "grey") +
geom_line() +
geom_errorbar(aes(ymin=abund-se, ymax=abund+se), width=.05, position=position_dodge(0.9))+
scale_y_continuous(name="Average Fish Abundance", limits=c(0, 15), breaks=seq(0, 15, by=5)) +
#scale_x_continuous(name = "Distance (km)", limits=c(0, 120), breaks=seq(0, 120,by=20)) + geom_smooth(colour = "black", fullrange = FALSE)+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
ggtitle("Average Fish Abundance by Distance from Reef")
biompertran <- summarySE(comm_mets, measurevar = "biom", groupvars = c("Transect_Number"))
plot.all.tran.biom = ggplot(biompertran, aes(x=as.factor(Transect_Number), y=as.numeric(biom), group = 1))
plot.all.tran.biom +
theme_classic()+
theme(axis.text=element_text(size=16, colour="black"),
axis.title.x=element_text(size=16, colour="black", vjust=-.5),
axis.title.y=element_text(size=16, colour="black", vjust=1.3),
legend.position="none",
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))+
geom_point (colour = "grey") +
geom_line() +
geom_errorbar(aes(ymin=biom-se, ymax=biom+se), width=.05, position=position_dodge(0.9))+
scale_y_continuous(name="Average Fish Biomass (kg/m2)", limits=c(0, 7), breaks=seq(0, 7, by=2)) +
#scale_x_continuous(name = "Distance (km)", limits=c(0, 120), breaks=seq(0, 120,by=20)) + geom_smooth(colour = "black", fullrange = FALSE)+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
ggtitle("Average Fish Biomass by Distance from Reef")
sahnpertran <- summarySE(comm_mets, measurevar = "shan", groupvars = c("Transect_Number"))
plot.all.tran.shan = ggplot(sahnpertran, aes(x=as.factor(Transect_Number), y=as.numeric(shan), group = 1))
plot.all.tran.shan +
theme_classic()+
theme(axis.text=element_text(size=16, colour="black"),
axis.title.x=element_text(size=16, colour="black", vjust=-.5),
axis.title.y=element_text(size=16, colour="black", vjust=1.3),
legend.position="none",
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))+
geom_point (colour = "grey") +
geom_line() +
geom_errorbar(aes(ymin=shan-se, ymax=shan+se), width=.05, position=position_dodge(0.9))+
scale_y_continuous(name="Average Shannon's Diversity Index", limits=c(0, 2), breaks=seq(0, 2, by=0.5)) +
#scale_x_continuous(name = "Distance (km)", limits=c(0, 120), breaks=seq(0, 120,by=20)) + geom_smooth(colour = "black", fullrange = FALSE)+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
ggtitle("Average Shannon's Diversity Index by Distance from Reef")
richpertran <- summarySE(comm_mets, measurevar = "S", groupvars = c("Transect_Number"))
plot.all.tran.rich = ggplot(richpertran, aes(x=as.factor(Transect_Number), y=as.numeric(S), group = 1))
plot.all.tran.rich +
theme_classic()+
theme(axis.text=element_text(size=16, colour="black"),
axis.title.x=element_text(size=16, colour="black", vjust=-.5),
axis.title.y=element_text(size=16, colour="black", vjust=1.3),
legend.position="none",
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))+
geom_point (colour = "grey") +
geom_line() +
geom_errorbar(aes(ymin=S-se, ymax=S+se), width=.05, position=position_dodge(0.9))+
scale_y_continuous(name="Average Species Richness", limits=c(0, 9), breaks=seq(0, 9, by=2)) +
#scale_x_continuous(name = "Distance (km)", limits=c(0, 120), breaks=seq(0, 120,by=20)) + geom_smooth(colour = "black", fullrange = FALSE)+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
ggtitle("Average Species Richness by Distance from Reef")
comm_mets_test <- filter(comm_mets, J != 'NaN')
evenpertran <- summarySE(comm_mets_test, measurevar = "J", groupvars = c("Transect_Number"))
plot.all.tran.even = ggplot(evenpertran, aes(x=as.factor(Transect_Number), y=as.numeric(J), group = 1))
plot.all.tran.even +
theme_classic()+
theme(axis.text=element_text(size=16, colour="black"),
axis.title.x=element_text(size=16, colour="black", vjust=-.5),
axis.title.y=element_text(size=16, colour="black", vjust=1.3),
legend.position="none",
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))+
geom_point (colour = "grey") +
geom_line() +
geom_errorbar(aes(ymin=J-se, ymax=J+se), width=.05, position=position_dodge(0.9))+
scale_y_continuous(name="Average Species Evenness", limits=c(0, 1), breaks=seq(0, 1, by=0.2)) +
#scale_x_continuous(name = "Distance (km)", limits=c(0, 120), breaks=seq(0, 120,by=20)) + geom_smooth(colour = "black", fullrange = FALSE)+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
ggtitle("Average Species Evenness by Distance from Reef")
species.data.biom <- databiom[,sp.start:ncol(databiom)]
species.orig.biom <- species.data.biom
#species.data <- transform_data (data = species.data, transform_type = "square_root")
library(vegan)
S <- specnumber(species.data) # species richness (S)
shan <- diversity (species.data, index = "shannon") # shannon diversity
simp <- diversity (species.data, index = "simpson") # simpson's diversity
simp_inv <- diversity (species.data, index = "invsimpson") # inverse simpson's diversity
J <- shan / log (S) # pielou's evenness (J)
abund <- rowSums (species.data, na.rm = FALSE, dims = 1) # total abundance for each sample
biom <- rowSums (species.data.biom, na.rm = FALSE, dims = 1) # totaal biomass for each sample
comm_mets <- cbind (abund, biom, S, shan, simp, simp_inv, J, env_data)
abundpertran <- summarySE(comm_mets, measurevar = "abund", groupvars = c("Transect_Number"))
View(abundpertran)
setwd("C:/Users/rclairer/Dropbox (Paxton)/Paxton Team Folder/CRFL - Artificial Reefs/Buffer_Zone/analysis_buffer-zone")
invisible(sapply(list.files(path = "R", pattern = "R$", full.names = TRUE), source)) # find functions and other dependencies in .R files
detach("package:plyr", unload=TRUE)
library(dplyr)
library(lubridate)
library(reshape2)
fish_data <- read.csv ("Fish/4_clean_data/fish_clean_data_output.csv") #without 342 (version of new2, size bins that hayley changed, removing sites not used, removing t1_t2_t3
fish_data_str <- filter(fish_data, Transect_Type == "Structural")
fish_data_str_0 <- filter(fish_data, Transect_Number == "0")
fish_data_rad <- filter(fish_data, Transect_Type == "Radiating")
fish_data <- rbind(fish_data_str_0, fish_data_rad)
#fish_data <- filter(fish_data, Species_Code != "NOFI") ###############USE IF FILTERING TRANSECTS WITH 0 FISH
#fish_data <- filter(fish_data, Transect_Number == "0" | Transect_Number == "3")##############if only 1 and 0
fish_data <- filter(fish_data, ID != "AR-364_PODS_2015-09-21_R_T2")
fish_data <- filter(fish_data, ID != "AR-378_PODS_2015-09-14_R_T1")
fish_data <- filter(fish_data, ID != "AR-364_BARGE_2015-12-10_R_T2")
fish_data <- filter(fish_data, ID != "AR-372_NR2_2015-12-09_R_T5")
fish_data <- filter(fish_data, ID != "AR-372_PODS_2015-12-09_R_T4")
fish_data <- filter(fish_data, ID != "AR-372_RB1_2015-12-09_R_T3")
fish_data <- filter(fish_data, ID != "AR-345_RB1_2015-10-15_R_T2")
fish_data <- filter(fish_data, ID != "AR-345_RB2_2015-10-15_R_T3")
fish_data <- filter(fish_data, ID != "AR-345_TITAN_2015-10-15_R_T3")
fish_meta <- combine_data_meta (data = fish_data,
file_meta = "Metadata/Fish/Fish_Codes_CRFL-AR.csv",
merge_by = "Species_Code")
fish_biom<-make_fish_biomass_col(data = fish_meta)
#fish_subset <- subset_data (data = fish_biom,
#sub_cat = "Pelagic.Demersal", #sub_cat = "Snapper.Grouper",
#sub_val = "Demersal") # YES for yes
## make fish abundance matrix
fish_biom -> data
data$group <- data[,"Species_Code"] # change to family or function_group as needed
#data$group <- data[,"Family"]
#data$group <- data[,"Functional_Group"]
#data$gruop <- data[, "Snapper.Grouper"]
#new2 <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_abund = sum(Abundance))
new2tesssssssst <- data %>% group_by(group, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_abund = sum(Abundance))
#what happens if we take out ID?
#new3 <- dcast(new2, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
new3tessssst <-  dcast(new2tesssssssst, Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
#new2biom <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_biom = sum(biomass))
new2biomtessst <- data %>% group_by(group, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_biom = sum(biomass))
#new3biom <- dcast(new2biom, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
new3biomtessst <- dcast(new2biomtessst, Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
#FOR VISIBILITY
#new2 <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number, Visibility_Min_ft) %>% summarise(data_abund = sum(Abundance))
#new3 <- dcast(new2, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number + Visibility_Min_ft ~ group)
#new3[is.na(new3)]<-0
new3tessssst[is.na(new3tessssst)]<-0
#new3biom[is.na(new3biom)] <- 0
new3biomtessst[is.na(new3biomtessst)] <- 0
#fish_abund_matrix <- new3
fish_abund_matrix <- new3tessssst
#fish_biom_matrix <- new3biom
fish_biom_matrix <- new3biomtessst
fish <- fish_abund_matrix # select either abundance or biomass matrix
fishbiom <- fish_biom_matrix
### COMPLEXITY DATA ### -------------------------------------------------------
comp <-read.table("Complexity/3_Clean_Data/comp_site_change.csv", header=T, sep=',')
### TEMPEATURE DATA ### -------------------------------------------------------
temp <-read.table("Temperature/3_Clean_Data/temp_site_change.csv", header=T, sep=',')
### SITES METADATA ### ------------------------------------------------------------
#sites <-read.table("Metadata/Sites/CRFL-AR_SITES_Master_2016-06-30_new.csv", header=T, sep=',')
sites <-read.table("Metadata/Sites/CRFL-AR_SITES_Master_2017-01-23.csv", header=T, sep=',')
### MERGE DATA ### ------------------------------------------------------------
library(plyr)
join1 <- join(fish, temp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
join2 <- join(join1, comp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
join3 <- join(join2, sites, by = c("Site", "Subsite"))
joinbiom1 <- join(fishbiom, temp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
joinbiom2 <- join(joinbiom1, comp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
joinbiom3 <- join(joinbiom2, sites, by = c("Site", "Subsite"))
#join4 <- cbind(join3[,1:7], join3[,81:110], join3[,8:80]) # species
join4 <- cbind(join3[,1:6], join3[,80:110], join3[,7:79]) # species
#join4 <- cbind(join3[,1:6], join3[,79:108], join3[,7:78]) # species NOFI excluded
#join4 <- cbind(join3[,1:7], join3[,80:109], join3[,8:79]) #for exclusion of NOFI
#join4 <- cbind(join3[,1:7], join3[,79:102], join3[,8:78]) #for exclusion of 2 and 3 and no fi
#join4 <- cbind(join3[,1:7], join3[,72:95], join3[,8:71]) # for exclusion of 1 and 2
#joinbiom4 <- cbind(joinbiom3[,1:7], joinbiom3[,81:110], joinbiom3[,8:80])
joinbiom4 <- cbind(joinbiom3[,1:6], joinbiom3[,80:110], joinbiom3[,7:79])
#joinbiom4 <- cbind(joinbiom3[,1:6], joinbiom3[,79:108], joinbiom3[,7:78]) #NOFI excluded
#joinbiom4 <- cbind(joinbiom3[,1:7], joinbiom3[,80:109], joinbiom3[,8:79])#for exclusion of NOFI
#joinbiom4 <- cbind(joinbiom3[,1:7], joinbiom3[,79:102], joinbiom3[,8:80])#for exclusion of 2 and 3
#joinbiom4 <- cbind(join3[,1:7], join3[,72:95], join3[,8:71]) # for exclusion of 1 and 2
#join4 <- cbind(join3[,1:7], join3[,36:ncol(join3)], join3[,8:35]) # family
#join4 <- cbind(join3[,1:7], join3[,16:ncol(join3)], join3[8:15]) #Functional group
#join5 <- join4[,-c(8, 12)]
join5 <- join4[,-c(11)]
#joinbiom5 <- joinbiom4[,-c(8, 12)]
joinbiom5 <- joinbiom4[,-c(11)]
data <- join5
databiom <- joinbiom5
env.end<- 36
sp.start<-37
env_data <- data[,1:env.end]
species.data<-data[,sp.start:ncol(data)] # fish data
species.orig<-species.data # fish data, no transform
species.data.biom <- databiom[,sp.start:ncol(databiom)]
species.orig.biom <- species.data.biom
#species.data <- transform_data (data = species.data, transform_type = "square_root")
#species.data.biom <- transform_data (data = species.data.biom, transform_type = "square_root")
#species.data <- transform_data (data = species.orig, transform_type = "cube_root")
library(vegan)
S <- specnumber(species.data) # species richness (S)
shan <- diversity (species.data, index = "shannon") # shannon diversity
simp <- diversity (species.data, index = "simpson") # simpson's diversity
simp_inv <- diversity (species.data, index = "invsimpson") # inverse simpson's diversity
J <- shan / log (S) # pielou's evenness (J)
abund <- rowSums (species.data, na.rm = FALSE, dims = 1) # total abundance for each sample
biom <- rowSums (species.data.biom, na.rm = FALSE, dims = 1) # totaal biomass for each sample
comm_mets <- cbind (abund, biom, S, shan, simp, simp_inv, J, env_data)
abundpertran <- summarySE(comm_mets, measurevar = "abund", groupvars = c("Transect_Number"))
View(abundpertran)
plot(abundpertran$Transect_Number, abundpertran$abund)
x <- c(0,1,2,3)
y <- abundpertran$abund
#m<-nls(y~a*x/(b+x), start = list(a= 13, b=1))
m <- nls(y~a*exp(-b*x), start = list(a= 13, b =1))
cor(y, predict(m))
lines(x,predict(m),col="red",lty=2,lwd=3)
m <- nls(y~a*exp(-b*x), start = list(a= 360, b =1))
cor(y, predict(m))
lines(x,predict(m),col="red",lty=2,lwd=3)
plot.all.tran = ggplot(abundpertran, aes(x=as.factor(Transect_Number), y=as.numeric(abund), group = 1))
plot.all.tran +
theme_classic()+
theme(axis.text=element_text(size=16, colour="black"),
axis.title.x=element_text(size=16, colour="black", vjust=-.5),
axis.title.y=element_text(size=16, colour="black", vjust=1.3),
legend.position="none",
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
plot.title = element_text(size = 16, hjust = 0.5))+
geom_point (colour = "grey") +
geom_line() +
geom_errorbar(aes(ymin=abund-se, ymax=abund+se), width=.05, position=position_dodge(0.9))+
scale_y_continuous(name="Average Fish Abundance", limits=c(0, 15), breaks=seq(0, 15, by=5)) +
#scale_x_continuous(name = "Distance (km)", limits=c(0, 120), breaks=seq(0, 120,by=20)) + geom_smooth(colour = "black", fullrange = FALSE)+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
ggtitle("Average Fish Abundance by Distance from Reef")
####################################################################################
plot.all.tran +
theme_classic()+
theme(axis.text=element_text(size=16, colour="black"),
axis.title.x=element_text(size=16, colour="black", vjust=-.5),
axis.title.y=element_text(size=16, colour="black", vjust=1.3),
legend.position="none",
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
plot.title = element_text(size = 16, hjust = 0.5))+
geom_point (colour = "grey") +
geom_line() +
geom_errorbar(aes(ymin=abund-se, ymax=abund+se), width=.05, position=position_dodge(0.9))+
scale_y_continuous(name="Average Fish Abundance", limits=c(0, 360), breaks=seq(0, 360, by=5)) +
#scale_x_continuous(name = "Distance (km)", limits=c(0, 120), breaks=seq(0, 120,by=20)) + geom_smooth(colour = "black", fullrange = FALSE)+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
ggtitle("Average Fish Abundance by Distance from Reef")
plot.all.tran +
theme_classic()+
theme(axis.text=element_text(size=16, colour="black"),
axis.title.x=element_text(size=16, colour="black", vjust=-.5),
axis.title.y=element_text(size=16, colour="black", vjust=1.3),
legend.position="none",
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
plot.title = element_text(size = 16, hjust = 0.5))+
geom_point (colour = "grey") +
geom_line() +
geom_errorbar(aes(ymin=abund-se, ymax=abund+se), width=.05, position=position_dodge(0.9))+
scale_y_continuous(name="Average Fish Abundance", limits=c(0, 400), breaks=seq(0, 400, by=5)) +
#scale_x_continuous(name = "Distance (km)", limits=c(0, 120), breaks=seq(0, 120,by=20)) + geom_smooth(colour = "black", fullrange = FALSE)+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
ggtitle("Average Fish Abundance by Distance from Reef")
plot.all.tran +
theme_classic()+
theme(axis.text=element_text(size=16, colour="black"),
axis.title.x=element_text(size=16, colour="black", vjust=-.5),
axis.title.y=element_text(size=16, colour="black", vjust=1.3),
legend.position="none",
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
plot.title = element_text(size = 16, hjust = 0.5))+
geom_point (colour = "grey") +
geom_line() +
geom_errorbar(aes(ymin=abund-se, ymax=abund+se), width=.05, position=position_dodge(0.9))+
scale_y_continuous(name="Average Fish Abundance", limits=c(0, 500), breaks=seq(0, 500, by=5)) +
#scale_x_continuous(name = "Distance (km)", limits=c(0, 120), breaks=seq(0, 120,by=20)) + geom_smooth(colour = "black", fullrange = FALSE)+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
ggtitle("Average Fish Abundance by Distance from Reef")
plot.all.tran +
theme_classic()+
theme(axis.text=element_text(size=16, colour="black"),
axis.title.x=element_text(size=16, colour="black", vjust=-.5),
axis.title.y=element_text(size=16, colour="black", vjust=1.3),
legend.position="none",
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
plot.title = element_text(size = 16, hjust = 0.5))+
geom_point (colour = "grey") +
geom_line() +
geom_errorbar(aes(ymin=abund-se, ymax=abund+se), width=.05, position=position_dodge(0.9))+
scale_y_continuous(name="Average Fish Abundance", limits=c(0, 500), breaks=seq(0, 500, by=100)) +
#scale_x_continuous(name = "Distance (km)", limits=c(0, 120), breaks=seq(0, 120,by=20)) + geom_smooth(colour = "black", fullrange = FALSE)+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
ggtitle("Average Fish Abundance by Distance from Reef")
