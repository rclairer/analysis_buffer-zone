nms.xod2 <- dist(species.nms[,1:2]) # pearson correlation
r1<-cor(species.bcd,nms.xod1)
r2.1<-r1^2; r2.1
# axis 2 is 2-D minus 1-D solution:
r2<-cor(species.bcd,nms.xod2)
r2.2<-r2^2;
r2.2<-r2.2-r2.1
# now plot it
NMDS = data.frame(MDS1 = species.nms[,1], MDS2 = species.nms[,2]) # data frame to work with
yl<-paste("NMS 2 ", '(', as.character(round(r2.2, digits=2)*100), '%', ')', sep='') # y axis label
xl<-paste("NMS 1 ", '(', as.character(round(r2.1, digits=2)*100), '%', ')', sep='') # x axis label
title<-paste(" ", 'stress = ', as.character(round(stress, digits=2)), '', sep='') # title
library(colorspace)
ggplot()+
coord_equal()+ # axes sizes equal
theme_bw()+ # basic theme
geom_point(data = NMDS,
aes(x = MDS1, y = MDS2, color = species.nms$Transect_Number), size = 5)
library(ecodist)
species.bcd <- bcdist(species.data, rmzero=FALSE)###### CR added this
nms.xod1 <- dist(species.nms[,1]) # pearson correlation
nms.xod2 <- dist(species.nms[,1:2]) # pearson correlation
r1<-cor(species.bcd,nms.xod1)
r2.1<-r1^2; r2.1
# axis 2 is 2-D minus 1-D solution:
r2<-cor(species.bcd,nms.xod2)
r2.2<-r2^2;
r2.2<-r2.2-r2.1
# now plot it
NMDS = data.frame(MDS1 = species.nms[,1], MDS2 = species.nms[,2]) # data frame to work with
yl<-paste("NMS 2 ", '(', as.character(round(r2.2, digits=2)*100), '%', ')', sep='') # y axis label
xl<-paste("NMS 1 ", '(', as.character(round(r2.1, digits=2)*100), '%', ')', sep='') # x axis label
title<-paste(" ", 'stress = ', as.character(round(stress, digits=2)), '', sep='') # title
library(colorspace)
ggplot()+
coord_equal()+ # axes sizes equal
theme_bw()+ # basic theme
geom_point(data = NMDS,
aes(x = MDS1, y = MDS2, color = species.nms$Transect_Number), size = 5)
View(species.wa)
View(species.wa)
View(species.wa)
View(fish_data_nofi)
```{r working_dir}
setwd("C:/Users/rclairer/Dropbox (Paxton)/Paxton Team Folder/CRFL - Artificial Reefs/Buffer_Zone/analysis_buffer-zone")
```
```{r setup}
opts_chunk$set(echo = FALSE)
invisible(sapply(list.files(path = "R", pattern = "R$", full.names = TRUE), source)) # find functions and other dependencies in .R files
```
source('~/.active-rstudio-document', echo=TRUE)
```{r working_dir}
setwd("C:/Users/rclairer/Dropbox (Paxton)/Paxton Team Folder/CRFL - Artificial Reefs/Buffer_Zone/analysis_buffer-zone")
```
```{r setup}
opts_chunk$set(echo = FALSE)
invisible(sapply(list.files(path = "R", pattern = "R$", full.names = TRUE), source)) # find functions and other dependencies in .R files
```
detach("package:plyr", unload=TRUE)
library(dplyr)
library(lubridate)
library(reshape2)
fish_data <- read.csv ("Fish/4_clean_data/fish_clean_data_output_structure2.csv")
fish_data_structure <- filter(fish_data, Structure_Present == "Yes")
fish_data_no <- filter(fish_data, Structure_Present != "Yes")
fish_data_no$Structure_Present <- "No"
fish_data_both <- rbind(fish_data_structure, fish_data_no)
fish_data_both <- filter(fish_data_both, Species_Code != "NOFI")
fish_data_both_radiating <- filter(fish_data_both, Transect_Type == "Radiating")
#fish_data_nofi <- filter(fish_data, Species_Code == "NOFI")
#fish_data <- filter(fish_data, Species_Code != "NOFI")
fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-364_PODS_2015-09-21_R_T2")
fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-330_BARGE_2015-12-11_S_T0") #try adding back in
fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-378_PODS_2015-09-14_R_T1")
fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-364_BARGE_2015-12-10_R_T2")
fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-372_NR2_2015-12-09_R_T5")
fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-372_PODS_2015-12-09_R_T4")
fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-372_RB1_2015-12-09_R_T3")
fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-345_RB1_2015-10-15_R_T2")
fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-345_RB2_2015-10-15_R_T3")
fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-345_TITAN_2015-10-15_R_T3")
#fish_data_both_radiating <- filter(fish_data_both_radiating, Site == "330")
#fish_data <- filter(fish_data, Transect_Type == "Radiating")
fish_meta_both <- combine_data_meta (data = fish_data_both_radiating,
file_meta = "Metadata/Fish/Fish_Codes_CRFL-AR.csv",
merge_by = "Species_Code")
fish_meta_both <- filter(fish_meta_both, Pelagic.Demersal == "Demersal")
fish_meta_both <- filter(fish_meta_both, Water_Col_Position != "R_S_W", Water_Col_Position != "S_W", Water_Col_Position != "W")
fish_biom_both<-make_fish_biomass_col(data = fish_meta_both)
fish_meta_structure <- combine_data_meta (data = fish_data_structure,
file_meta = "Metadata/Fish/Fish_Codes_CRFL-AR.csv",
merge_by = "Species_Code")
fish_meta_structure <- filter(fish_meta_structure, Pelagic.Demersal == "Demersal")
fish_meta_structure <- filter(fish_meta_structure, Water_Col_Position != "R_S_W", Water_Col_Position != "S_W", Water_Col_Position != "W")
fish_meta_no <- combine_data_meta (data = fish_data_no,
file_meta = "Metadata/Fish/Fish_Codes_CRFL-AR.csv",
merge_by = "Species_Code")
fish_meta_no <- filter(fish_meta_no, Pelagic.Demersal == "Demersal")
#fish_meta_no <- filter(fish_meta_no, Water_Col_Position == "R")
fish_meta_no<-filter(fish_meta_no, Water_Col_Position != "R_S_W", Water_Col_Position != "S_W", Water_Col_Position != "W")
fish_biom_structure<-make_fish_biomass_col(data = fish_meta_structure)
fish_biom_no<-make_fish_biomass_col(data = fish_meta_no)
####################################################################
#fish_subset <- subset_data (data = fish_biom,
#sub_cat = "Pelagic.Demersal", #sub_cat = "Snapper.Grouper",
#sub_val = "Demersal") # YES for yes
## make fish abundance matrix
#fish_biom -> data
#data$group <- data[,"Species_Code"] # change to family or function_group as needed
#data$group <- data[,"Family"]
#data$group <- data[,"Functional_Group"]
#data$group <- data[,"Family"] #### FAMILY AND FUNCTIONAL GROUP DON"T WORK AS IS BECAUSE THERE ARE FISH WITHOUT FAMILIES AND FUNCTIONAL GROUPS MATCHING THEM...NEEDS FIXING"
#new2 <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_abund = sum(Abundance))
#new3 <- dcast(new2, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
#hi2 <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number, Structure_Present, Radiating_Structure) %>% summarise(data_abund = sum(Abundance))
#hi3 <- dcast(new2, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number + Structure_Present + Radiating_Structure ~ group)
#new3[is.na(new3)]<-0
#new4 = new3[rowSums(new3[,8:ncol(new3)]) !=0,] # remove rows where there were no fish on the transect - need this for species, family, and functional group levels
#fish_abund_matrix <- new4
fish_abund_matrix_both <- calc_fish_abund_matrix (data = fish_biom_both,
tax_level = "Species_Code")
#                                       #tax_level = "Family")
fish_abund_matrix_structure <- calc_fish_abund_matrix (data = fish_biom_structure,
tax_level = "Species_Code")
#                                       #tax_level = "Family")
fish_abund_matrix_no <- calc_fish_abund_matrix (data = fish_biom_no,
tax_level = "Species_Code")
#                                       #tax_level = "Family")
fish_biom_matrix_both <- calc_fish_biom_matrix (data = fish_biom_both,
tax_level = "Species_Code")
#                                            #tax_level = "Family")
#                                           tax_level = "Functional_Group")
fish_biom_matrix_structure <- calc_fish_biom_matrix (data = fish_biom_structure,
tax_level = "Species_Code")
#                                            #tax_level = "Family")
#                                           tax_level = "Functional_Group")
fish_biom_matrix_no <- calc_fish_biom_matrix (data = fish_biom_no,
tax_level = "Species_Code")
#                                            #tax_level = "Family")
#                                           tax_level = "Functional_Group")
#fish_abund_matrix <- rbind(fish_abund_matrix_structure, fish_abund_matrix_no)
#fish_biom_matrix <- rbind(fish_biom_matrix_structure, fish_biom_matrix_no)
# If at species level, bring meta data back in --> can't do if in wide format obviously!
#library(plyr)
#fish_abund <- rename(fish_abund, c("group"="Species_Code"))
#fish_abund <- combine_data_meta(data = fish_abund,
#file_meta = "Metadata/Fish/Fish_Codes.csv",
#merge_by = "Species_Code")
#fish <- fish_abund_matrix # select either abundance or biomass matrix
#fish <- remove_rare_species (data = fish) # remove rare species if desired
#rm(fish_data, fish_meta, fish_biom, fish_subset, fish_abund_matrix, fish_biom_matrix) # remove dataframes
### COMPLEXITY DATA ### -------------------------------------------------------
#comp <-read.table("Complexity/3_Clean_Data/comp_site_change.csv", header=T, sep=',')
### TEMPEATURE DATA ### -------------------------------------------------------
#temp <-read.table("Temperature/3_Clean_Data/temp_site_change.csv", header=T, sep=',')
### SITES METADATA ### ------------------------------------------------------------
#sites <-read.table("Metadata/Sites/CRFL-AR_SITES_Master_2016-06-30_new.csv", header=T, sep=',')
### MERGE DATA ### ------------------------------------------------------------
#library(plyr)
#join1 <- join(fish, temp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
#join2 <- join(join1, comp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
#join3 <- join(join2, sites, by = c("Site", "Subsite"))
#join4 <- cbind(join3[,1:8], join3[,91:114], join3[,9:90]) #FOR SPECIES crude way of rearranging so that columns are in decent order; it duplicates ID and names it ID.1 for the duplicate so delete that column later on
#join4 <- cbind(join3[,1:9], join3[,37:60], join3[,10:36]) #FOR FAMILY
#join4 <- cbind(join3[,1:9], join3[,17:40], join3[,10:16]) #FOR FUNCTIONAL GROUP
# new ones
#join4 <- cbind(join3[,1:7], join3[,88:111], join3[,8:87]) # species
#join4 <- cbind(join3[,1:7], join3[,40:ncol(join3)], join3[,8:39]) # family
#join4 <- cbind(join3[,1:7], join3[,16:ncol(join3)], join3[8:15]) #Functional group
#join5 <- join4[,-c(8, 12)] # FOR SPECIES
#join5 <- join4[,-c(8,12)] # FOR FAMILY
#join5 <- join4[,-c(8,12)] # FOR FUNCTIONAL GROUP
#data <- join5
#rm(list= ls()[!(ls() %in% c('data'))]) # removes everything except selected data frame(s)
## Filter data if necessary ## -------------------------------
#data <- filter(data, Reef_type == "Natural")
#data <- filter(data, Reef_type == "Artificial")
#data <- filter(data, Depth_general == "Shallow")
# data <- filter(data, Depth_general == "Shallow")
# data <- filter(data, Depth_general == "Deep")
#data <- filter(data, Reef_type == "Natural", Depth_general == "Intermediate")
data <- fish_abund_matrix_both
env.end<- 10 #FOR SPECEIS
sp.start<-11 #FOR SPECIES
#env.end <- 29 #FOR FAMILY
#sp.start <- 30 #FOR FAMILY
#env.end <- 29 #FOR FUNCTIONAL GROUP
#sp.start <-30 #FOR FUNCTIONAL GROUP
# preserve biomass data for plotting
#biom_data<-merge(merge.2, fish_biom_matrix)
#biom_data <- filter(biom_data, Reef_type == "Artificial")
### REMOVE OUTLIER 200LE on 2014-07-01
#biom_data <- biom_data[-8,]
#biom_data <- biom_data[,sp.start:ncol(biom_data)]
env_data <- data[,1:env.end]
species.data<-data[,sp.start:ncol(data)] # fish data
species.orig<-species.data # fish data, no transform
species.data <- transform_data (data = species.data, transform_type = "square_root")
#species.data <- transform_data (data = species.data, transform_type = "cube_root")
#species.data <- transform_data (data = species.data, transform_type = "pres_abs")
library(vegan)
set.seed(318)
species.metaMDS <- metaMDS(species.data, distance = "bray", k=2, trymax = 1000, autotransform = FALSE)
# performs nMDS; arguments are as follows:
stressplot(species.metaMDS) # Shepard plot
species.metaMDS$stress # stress value
plot(species.metaMDS) # rough plot
text(species.metaMDS$species[,1:2],rownames(species.metaMDS$species),cex=0.8,col="red") # add species labels to the plot (weighted averages)
## references
# https://cran.r-project.org/web/packages/vegan/vignettes/intro-vegan.pdf
# https://jonlefcheck.net/2012/10/24/nmds-tutorial-in-r/
# http://strata.uga.edu/6370/lecturenotes/multidimensionalScaling.html
# extract info neccessary for polished plotting
scores <- species.metaMDS$points # scores
species.nms <- cbind(scores, env_data) # datset with scores and env data
# weighted averages for species
species.wa <- data.frame(species.metaMDS$species)
species.wa <- cbind(row.names(species.wa), species.wa)
library(plyr)
species.wa <- rename(species.wa, c("row.names(species.wa)"="species_code"))
#added and named the sp code column, the first column w/ sp names is visually but NOT functionally there
stress <- species.metaMDS$stress # save stress value
species.bcd <- bcdist(species.data, rmzero=FALSE)###### CR added this
nms.xod1 <- dist(species.nms[,1]) # pearson correlation
nms.xod2 <- dist(species.nms[,1:2]) # pearson correlation
r1<-cor(species.bcd,nms.xod1)
r2.1<-r1^2; r2.1
# axis 2 is 2-D minus 1-D solution:
r2<-cor(species.bcd,nms.xod2)
r2.2<-r2^2;
r2.2<-r2.2-r2.1
# now plot it
NMDS = data.frame(MDS1 = species.nms[,1], MDS2 = species.nms[,2]) # data frame to work with
yl<-paste("NMS 2 ", '(', as.character(round(r2.2, digits=2)*100), '%', ')', sep='') # y axis label
xl<-paste("NMS 1 ", '(', as.character(round(r2.1, digits=2)*100), '%', ')', sep='') # x axis label
title<-paste(" ", 'stress = ', as.character(round(stress, digits=2)), '', sep='') # title
library(colorspace)
ggplot()+
coord_equal()+ # axes sizes equal
theme_bw()+ # basic theme
geom_point(data = NMDS,
aes(x = MDS1, y = MDS2, color = species.nms$Transect_Number), size = 5)
ggplot()+
coord_equal()+ # axes sizes equal
theme_bw()+ # basic theme
geom_point(data = NMDS,
aes(x = MDS1, y = MDS2, color = species.nms$as.factor(Transect_Number)), size = 5)
ggplot()+
coord_equal()+ # axes sizes equal
theme_bw()+ # basic theme
geom_point(data = NMDS,
aes(x = MDS1, y = MDS2, color = species.nms$Stucture_Present), size = 5)
View(species.nms)
```{r working_dir}
setwd("C:/Users/rclairer/Dropbox (Paxton)/Paxton Team Folder/CRFL - Artificial Reefs/Buffer_Zone/analysis_buffer-zone")
```
```{r setup}
opts_chunk$set(echo = FALSE)
invisible(sapply(list.files(path = "R", pattern = "R$", full.names = TRUE), source)) # find functions and other dependencies in .R files
```
```{r get_data}
### FISH DATA ### --------------------------------------------------------------
detach("package:plyr", unload=TRUE)
library(dplyr)
library(lubridate)
library(reshape2)
fish_data <- read.csv ("Fish/4_clean_data/fish_clean_data_output_structure2.csv")
fish_data_structure <- filter(fish_data, Structure_Present == "Yes")
fish_data_no <- filter(fish_data, Structure_Present != "Yes")
fish_data_no$Structure_Present <- "No"
fish_data_both <- rbind(fish_data_structure, fish_data_no)
fish_data_both <- filter(fish_data_both, Species_Code != "NOFI")
fish_data_both_radiating <- filter(fish_data_both, Transect_Type == "Radiating")
#fish_data_nofi <- filter(fish_data, Species_Code == "NOFI")
#fish_data <- filter(fish_data, Species_Code != "NOFI")
fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-364_PODS_2015-09-21_R_T2")
fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-330_BARGE_2015-12-11_S_T0") #try adding back in
fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-378_PODS_2015-09-14_R_T1")
fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-364_BARGE_2015-12-10_R_T2")
fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-372_NR2_2015-12-09_R_T5")
fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-372_PODS_2015-12-09_R_T4")
fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-372_RB1_2015-12-09_R_T3")
fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-345_RB1_2015-10-15_R_T2")
fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-345_RB2_2015-10-15_R_T3")
fish_data_both_radiating <- filter(fish_data_both_radiating, ID != "AR-345_TITAN_2015-10-15_R_T3")
#fish_data_both_radiating <- filter(fish_data_both_radiating, Site == "330")
#fish_data <- filter(fish_data, Transect_Type == "Radiating")
fish_meta_both <- combine_data_meta (data = fish_data_both_radiating,
file_meta = "Metadata/Fish/Fish_Codes_CRFL-AR.csv",
merge_by = "Species_Code")
fish_meta_both <- filter(fish_meta_both, Pelagic.Demersal == "Demersal")
fish_meta_both <- filter(fish_meta_both, Water_Col_Position != "R_S_W", Water_Col_Position != "S_W", Water_Col_Position != "W")
fish_biom_both<-make_fish_biomass_col(data = fish_meta_both)
fish_meta_structure <- combine_data_meta (data = fish_data_structure,
file_meta = "Metadata/Fish/Fish_Codes_CRFL-AR.csv",
merge_by = "Species_Code")
fish_meta_structure <- filter(fish_meta_structure, Pelagic.Demersal == "Demersal")
fish_meta_structure <- filter(fish_meta_structure, Water_Col_Position != "R_S_W", Water_Col_Position != "S_W", Water_Col_Position != "W")
fish_meta_no <- combine_data_meta (data = fish_data_no,
file_meta = "Metadata/Fish/Fish_Codes_CRFL-AR.csv",
merge_by = "Species_Code")
fish_meta_no <- filter(fish_meta_no, Pelagic.Demersal == "Demersal")
#fish_meta_no <- filter(fish_meta_no, Water_Col_Position == "R")
fish_meta_no<-filter(fish_meta_no, Water_Col_Position != "R_S_W", Water_Col_Position != "S_W", Water_Col_Position != "W")
fish_biom_structure<-make_fish_biomass_col(data = fish_meta_structure)
fish_biom_no<-make_fish_biomass_col(data = fish_meta_no)
####################################################################
#fish_subset <- subset_data (data = fish_biom,
#sub_cat = "Pelagic.Demersal", #sub_cat = "Snapper.Grouper",
#sub_val = "Demersal") # YES for yes
## make fish abundance matrix
#fish_biom -> data
#data$group <- data[,"Species_Code"] # change to family or function_group as needed
#data$group <- data[,"Family"]
#data$group <- data[,"Functional_Group"]
#data$group <- data[,"Family"] #### FAMILY AND FUNCTIONAL GROUP DON"T WORK AS IS BECAUSE THERE ARE FISH WITHOUT FAMILIES AND FUNCTIONAL GROUPS MATCHING THEM...NEEDS FIXING"
#new2 <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_abund = sum(Abundance))
#new3 <- dcast(new2, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
#hi2 <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number, Structure_Present, Radiating_Structure) %>% summarise(data_abund = sum(Abundance))
#hi3 <- dcast(new2, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number + Structure_Present + Radiating_Structure ~ group)
#new3[is.na(new3)]<-0
#new4 = new3[rowSums(new3[,8:ncol(new3)]) !=0,] # remove rows where there were no fish on the transect - need this for species, family, and functional group levels
#fish_abund_matrix <- new4
fish_abund_matrix_both <- calc_fish_abund_matrix (data = fish_biom_both,
tax_level = "Species_Code")
#                                       #tax_level = "Family")
fish_abund_matrix_structure <- calc_fish_abund_matrix (data = fish_biom_structure,
tax_level = "Species_Code")
#                                       #tax_level = "Family")
fish_abund_matrix_no <- calc_fish_abund_matrix (data = fish_biom_no,
tax_level = "Species_Code")
#                                       #tax_level = "Family")
fish_biom_matrix_both <- calc_fish_biom_matrix (data = fish_biom_both,
tax_level = "Species_Code")
#                                            #tax_level = "Family")
#                                           tax_level = "Functional_Group")
fish_biom_matrix_structure <- calc_fish_biom_matrix (data = fish_biom_structure,
tax_level = "Species_Code")
#                                            #tax_level = "Family")
#                                           tax_level = "Functional_Group")
fish_biom_matrix_no <- calc_fish_biom_matrix (data = fish_biom_no,
tax_level = "Species_Code")
#                                            #tax_level = "Family")
#                                           tax_level = "Functional_Group")
#fish_abund_matrix <- rbind(fish_abund_matrix_structure, fish_abund_matrix_no)
#fish_biom_matrix <- rbind(fish_biom_matrix_structure, fish_biom_matrix_no)
# If at species level, bring meta data back in --> can't do if in wide format obviously!
#library(plyr)
#fish_abund <- rename(fish_abund, c("group"="Species_Code"))
#fish_abund <- combine_data_meta(data = fish_abund,
#file_meta = "Metadata/Fish/Fish_Codes.csv",
#merge_by = "Species_Code")
#fish <- fish_abund_matrix # select either abundance or biomass matrix
#fish <- remove_rare_species (data = fish) # remove rare species if desired
#rm(fish_data, fish_meta, fish_biom, fish_subset, fish_abund_matrix, fish_biom_matrix) # remove dataframes
### COMPLEXITY DATA ### -------------------------------------------------------
#comp <-read.table("Complexity/3_Clean_Data/comp_site_change.csv", header=T, sep=',')
### TEMPEATURE DATA ### -------------------------------------------------------
#temp <-read.table("Temperature/3_Clean_Data/temp_site_change.csv", header=T, sep=',')
### SITES METADATA ### ------------------------------------------------------------
#sites <-read.table("Metadata/Sites/CRFL-AR_SITES_Master_2016-06-30_new.csv", header=T, sep=',')
### MERGE DATA ### ------------------------------------------------------------
#library(plyr)
#join1 <- join(fish, temp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
#join2 <- join(join1, comp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
#join3 <- join(join2, sites, by = c("Site", "Subsite"))
#join4 <- cbind(join3[,1:8], join3[,91:114], join3[,9:90]) #FOR SPECIES crude way of rearranging so that columns are in decent order; it duplicates ID and names it ID.1 for the duplicate so delete that column later on
#join4 <- cbind(join3[,1:9], join3[,37:60], join3[,10:36]) #FOR FAMILY
#join4 <- cbind(join3[,1:9], join3[,17:40], join3[,10:16]) #FOR FUNCTIONAL GROUP
# new ones
#join4 <- cbind(join3[,1:7], join3[,88:111], join3[,8:87]) # species
#join4 <- cbind(join3[,1:7], join3[,40:ncol(join3)], join3[,8:39]) # family
#join4 <- cbind(join3[,1:7], join3[,16:ncol(join3)], join3[8:15]) #Functional group
#join5 <- join4[,-c(8, 12)] # FOR SPECIES
#join5 <- join4[,-c(8,12)] # FOR FAMILY
#join5 <- join4[,-c(8,12)] # FOR FUNCTIONAL GROUP
#data <- join5
#rm(list= ls()[!(ls() %in% c('data'))]) # removes everything except selected data frame(s)
## Filter data if necessary ## -------------------------------
#data <- filter(data, Reef_type == "Natural")
#data <- filter(data, Reef_type == "Artificial")
#data <- filter(data, Depth_general == "Shallow")
# data <- filter(data, Depth_general == "Shallow")
# data <- filter(data, Depth_general == "Deep")
#data <- filter(data, Reef_type == "Natural", Depth_general == "Intermediate")
data <- fish_abund_matrix_both
env.end<- 10 #FOR SPECEIS
sp.start<-11 #FOR SPECIES
#env.end <- 29 #FOR FAMILY
#sp.start <- 30 #FOR FAMILY
#env.end <- 29 #FOR FUNCTIONAL GROUP
#sp.start <-30 #FOR FUNCTIONAL GROUP
# preserve biomass data for plotting
#biom_data<-merge(merge.2, fish_biom_matrix)
#biom_data <- filter(biom_data, Reef_type == "Artificial")
### REMOVE OUTLIER 200LE on 2014-07-01
#biom_data <- biom_data[-8,]
#biom_data <- biom_data[,sp.start:ncol(biom_data)]
env_data <- data[,1:env.end]
species.data<-data[,sp.start:ncol(data)] # fish data
species.orig<-species.data # fish data, no transform
species.data <- transform_data (data = species.data, transform_type = "square_root")
#species.data <- transform_data (data = species.data, transform_type = "cube_root")
#species.data <- transform_data (data = species.data, transform_type = "pres_abs")
```
library(vegan)
set.seed(318)
species.metaMDS <- metaMDS(species.data, distance = "bray", k=2, trymax = 1000, autotransform = FALSE)
stressplot(species.metaMDS) # Shepard plot
species.metaMDS$stress # stress value
plot(species.metaMDS) # rough plot
text(species.metaMDS$species[,1:2],rownames(species.metaMDS$species),cex=0.8,col="red") # add
## references
# https://cran.r-project.org/web/packages/vegan/vignettes/intro-vegan.pdf
# https://jonlefcheck.net/2012/10/24/nmds-tutorial-in-r/
# http://strata.uga.edu/6370/lecturenotes/multidimensionalScaling.html
# extract info neccessary for polished plotting
scores <- species.metaMDS$points # scores
species.nms <- cbind(scores, env_data) # datset with scores and env data
# weighted averages for species
species.wa <- data.frame(species.metaMDS$species)
species.wa <- cbind(row.names(species.wa), species.wa)
library(plyr)
species.wa <- rename(species.wa, c("row.names(species.wa)"="species_code"))
#added and named the sp code column, the first column w/ sp names is visually but NOT functionally there
stress <- species.metaMDS$stress # save stress value
nms.xod1 <- dist(species.nms[,1]) # pearson correlation
nms.xod2 <- dist(species.nms[,1:2]) # pearson correlation
r1<-cor(species.bcd,nms.xod1)
r2.1<-r1^2; r2.1
# axis 2 is 2-D minus 1-D solution:
r2<-cor(species.bcd,nms.xod2)
r2.2<-r2^2;
r2.2<-r2.2-r2.1
# now plot it
NMDS = data.frame(MDS1 = species.nms[,1], MDS2 = species.nms[,2]) # data frame to work with
yl<-paste("NMS 2 ", '(', as.character(round(r2.2, digits=2)*100), '%', ')', sep='') # y axis label
xl<-paste("NMS 1 ", '(', as.character(round(r2.1, digits=2)*100), '%', ')', sep='') # x axis label
title<-paste(" ", 'stress = ', as.character(round(stress, digits=2)), '', sep='') # title
library(colorspace)
library(ecodist)
species.bcd <- bcdist(species.data, rmzero=FALSE)###### CR added this
nms.xod1 <- dist(species.nms[,1]) # pearson correlation
nms.xod2 <- dist(species.nms[,1:2]) # pearson correlation
r1<-cor(species.bcd,nms.xod1)
r2.1<-r1^2; r2.1
# axis 2 is 2-D minus 1-D solution:
r2<-cor(species.bcd,nms.xod2)
r2.2<-r2^2;
r2.2<-r2.2-r2.1
# now plot it
NMDS = data.frame(MDS1 = species.nms[,1], MDS2 = species.nms[,2]) # data frame to work with
yl<-paste("NMS 2 ", '(', as.character(round(r2.2, digits=2)*100), '%', ')', sep='') # y axis label
xl<-paste("NMS 1 ", '(', as.character(round(r2.1, digits=2)*100), '%', ')', sep='') # x axis label
title<-paste(" ", 'stress = ', as.character(round(stress, digits=2)), '', sep='') # title
library(colorspace)
ggplot()+
coord_equal()+ # axes sizes equal
theme_bw()+ # basic theme
geom_point(data = NMDS,
aes(x = MDS1, y = MDS2, color = species.nms$Stucture_Present), size = 5)
ggplot()+
coord_equal()+ # axes sizes equal
theme_bw()+ # basic theme
geom_point(data = NMDS,
aes(x = MDS1, y = MDS2, shape = species.nms$Stucture_Present), size = 5)
View(species.nms)
species.nms$Transect_Number <- as.factor(species.nms$Transect_Number)
ggplot()+
coord_equal()+ # axes sizes equal
theme_bw()+ # basic theme
geom_point(data = NMDS,
aes(x = MDS1, y = MDS2, color = species.nms$Transect_Number), size = 5)
species.nms$Structure_Present <- as.factor(species.nms$Structure_Present)
ggplot()+
coord_equal()+ # axes sizes equal
theme_bw()+ # basic theme
geom_point(data = NMDS,
aes(x = MDS1, y = MDS2, shape = species.nms$Stucture_Present), size = 5)
species.nms$Structure_Present <- as.factor(species.nms$Structure_Present)
ggplot()+
coord_equal()+ # axes sizes equal
theme_bw()+ # basic theme
geom_point(data = NMDS,
aes(x = MDS1, y = MDS2, color = species.nms$Stucture_Present), size = 5)
View(species.nms)
species.nms$Structure_Present <- as.factor(species.nms$Structure_Present)
ggplot()+
coord_equal()+ # axes sizes equal
theme_bw()+ # basic theme
#geom_point(data = NMDS,
#aes(x = MDS1, y = MDS2, color = species.nms$Stucture_Present), size = 5)
geom_point(data = species.nms, x = MDS1,  y= MDS2, colour = Structure_Present, size = 5)
View(species.nms)
geom_point(data = species.nms, x = MDS1,  y= MDS2, colour = Structure_Present, size = 5)
species.nms$Structure_Present <- as.factor(species.nms$Structure_Present)
ggplot()+
coord_equal()+ # axes sizes equal
theme_bw()+ # basic theme
geom_point(data = NMDS,
aes(x = MDS1, y = MDS2, color = species.nms$Stucture_Present), size = 5)
# geom_point(data = species.nms, x = MDS1,  y= MDS2, colour = Structure_Present, size = 5)
geom_point(data = species.nms, colour = Structure_Present, size = 5)
names(species.nms)
species.nms$Structure_Present <- as.factor(species.nms$Structure_Present)
ggplot()+
coord_equal()+ # axes sizes equal
theme_bw()+ # basic theme
geom_point(data = NMDS,
aes(x = MDS1, y = MDS2, color = species.nms$Stucture_Present), size = 5)
# geom_point(data = species.nms, x = MDS1,  y= MDS2, colour = Structure_Present, size = 5)
geom_point(data = species.nms, colour = "Structure_Present", size = 5)
