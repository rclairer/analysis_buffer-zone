setwd("C:/Users/rclairer/Dropbox (Paxton)/Paxton Team Folder/CRFL - Artificial Reefs/Buffer_Zone/analysis_buffer-zone")
invisible(sapply(list.files(path = "R", pattern = "R$", full.names = TRUE), source)) # find functions and other dependencies in .R files
detach("package:plyr", unload=TRUE)
library(dplyr)
library(lubridate)
library(reshape2)
fish_data <- read.csv ("Fish/4_clean_data/fish_clean_data_output.csv") #without 342 (version of new2, size bins that hayley changed, removing sites not used, removing t1_t2_t3
fish_data_str <- filter(fish_data, Transect_Type == "Structural")
fish_data_str_0 <- filter(fish_data, Transect_Number == "0")
fish_data_rad <- filter(fish_data, Transect_Type == "Radiating")
fish_data <- rbind(fish_data_str_0, fish_data_rad)
#fish_data <- filter(fish_data, Species_Code != "NOFI") ###############USE IF FILTERING TRANSECTS WITH 0 FISH
#fish_data <- filter(fish_data, Transect_Number == "0" | Transect_Number == "3")##############if only 1 and 0
fish_data <- filter(fish_data, ID != "AR-364_PODS_2015-09-21_R_T2")
fish_data <- filter(fish_data, ID != "AR-378_PODS_2015-09-14_R_T1")
fish_data <- filter(fish_data, ID != "AR-364_BARGE_2015-12-10_R_T2")
fish_data <- filter(fish_data, ID != "AR-372_NR2_2015-12-09_R_T5")
fish_data <- filter(fish_data, ID != "AR-372_PODS_2015-12-09_R_T4")
fish_data <- filter(fish_data, ID != "AR-372_RB1_2015-12-09_R_T3")
fish_data <- filter(fish_data, ID != "AR-345_RB1_2015-10-15_R_T2")
fish_data <- filter(fish_data, ID != "AR-345_RB2_2015-10-15_R_T3")
fish_data <- filter(fish_data, ID != "AR-345_TITAN_2015-10-15_R_T3")
fish_meta <- combine_data_meta (data = fish_data,
file_meta = "Metadata/Fish/Fish_Codes_CRFL-AR.csv",
merge_by = "Species_Code")
fish_biom<-make_fish_biomass_col(data = fish_meta)
#fish_subset <- subset_data (data = fish_biom,
#sub_cat = "Pelagic.Demersal", #sub_cat = "Snapper.Grouper",
#sub_val = "Demersal") # YES for yes
## make fish abundance matrix
fish_biom -> data
data$group <- data[,"Species_Code"] # change to family or function_group as needed
#data$group <- data[,"Family"]
#data$group <- data[,"Functional_Group"]
#data$gruop <- data[, "Snapper.Grouper"]
new2 <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_abund = sum(Abundance))
new3 <- dcast(new2, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
new2biom <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_biom = sum(biomass))
new3biom <- dcast(new2biom, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
#FOR VISIBILITY
#new2 <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number, Visibility_Min_ft) %>% summarise(data_abund = sum(Abundance))
#new3 <- dcast(new2, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number + Visibility_Min_ft ~ group)
new3[is.na(new3)]<-0
new3biom[is.na(new3biom)] <- 0
fish_abund_matrix <- new3
fish_biom_matrix <- new3biom
fish <- fish_abund_matrix # select either abundance or biomass matrix
fishbiom <- fish_biom_matrix
### COMPLEXITY DATA ### -------------------------------------------------------
comp <-read.table("Complexity/3_Clean_Data/comp_site_change.csv", header=T, sep=',')
### TEMPEATURE DATA ### -------------------------------------------------------
temp <-read.table("Temperature/3_Clean_Data/temp_site_change.csv", header=T, sep=',')
### SITES METADATA ### ------------------------------------------------------------
#sites <-read.table("Metadata/Sites/CRFL-AR_SITES_Master_2016-06-30_new.csv", header=T, sep=',')
sites <-read.table("Metadata/Sites/CRFL-AR_SITES_Master_2017-01-23.csv", header=T, sep=',')
### MERGE DATA ### ------------------------------------------------------------
library(plyr)
join1 <- join(fish, temp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
join2 <- join(join1, comp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
join3 <- join(join2, sites, by = c("Site", "Subsite"))
joinbiom1 <- join(fishbiom, temp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
joinbiom2 <- join(joinbiom1, comp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
joinbiom3 <- join(joinbiom2, sites, by = c("Site", "Subsite"))
join4 <- cbind(join3[,1:7], join3[,81:110], join3[,8:80]) # species
#join4 <- cbind(join3[,1:7], join3[,80:103], join3[,8:79]) #for exclusion of NOFI
#join4 <- cbind(join3[,1:7], join3[,79:102], join3[,8:78]) #for exclusion of 2 and 3 and no fi
#join4 <- cbind(join3[,1:7], join3[,72:95], join3[,8:71]) # for exclusion of 1 and 2
joinbiom4 <- cbind(joinbiom3[,1:7], joinbiom3[,81:110], joinbiom3[,8:80])
#joinbiom4 <- cbind(joinbiom3[,1:7], joinbiom3[,80:103], joinbiom3[,8:79])#for exclusion of NOFI
#joinbiom4 <- cbind(joinbiom3[,1:7], joinbiom3[,79:102], joinbiom3[,8:80])#for exclusion of 2 and 3
#joinbiom4 <- cbind(join3[,1:7], join3[,72:95], join3[,8:71]) # for exclusion of 1 and 2
#join4 <- cbind(join3[,1:7], join3[,36:ncol(join3)], join3[,8:35]) # family
#join4 <- cbind(join3[,1:7], join3[,16:ncol(join3)], join3[8:15]) #Functional group
join5 <- join4[,-c(8, 12)]
joinbiom5 <- joinbiom4[,-c(8, 12)]
data <- join5
databiom <- joinbiom5
env.end<- 35
sp.start<-36
env_data <- data[,1:env.end]
species.data<-data[,sp.start:ncol(data)] # fish data
species.orig<-species.data # fish data, no transform
species.data.biom <- databiom[,sp.start:ncol(databiom)]
species.orig.biom <- species.data.biom
#species.data <- transform_data (data = species.data, transform_type = "square_root")
#species.data.biom <- transform_data (data = species.data.biom, transform_type = "square_root")
#species.data <- transform_data (data = species.orig, transform_type = "cube_root")
#species.data <- transform_data (data = species.data, transform_type = "pres_abs")
#species.data <- transform_data (data = species.orig, transform_type = "box-cox")
#species.data.biom <- transform_data (data = species.data.biom, transform_type = "box-cox")
#write.csv(species.data, file = "Metadata/species.csv", row.names = FALSE)
library(vegan)
S <- specnumber(species.data) # species richness (S)
shan <- diversity (species.data, index = "shannon") # shannon diversity
simp <- diversity (species.data, index = "simpson") # simpson's diversity
simp_inv <- diversity (species.data, index = "invsimpson") # inverse simpson's diversity
J <- shan / log (S) # pielou's evenness (J)
abund <- rowSums (species.data, na.rm = FALSE, dims = 1) # total abundance for each sample
biom <- rowSums (species.data.biom, na.rm = FALSE, dims = 1) # totaal biomass for each sample
comm_mets <- cbind (abund, biom, S, shan, simp, simp_inv, J, env_data)
library(agricolae)
library(nlme)
comm_mets$Transect_Number <- as.factor(comm_mets$Transect_Number)
comm_mets$Site <- as.factor(comm_mets$Site)
comm_mets$Sampling_Period <- as.factor(comm_mets$Sampling_Period)
comm_mets$Reef_Type <- as.factor(comm_mets$Reef_Type)
comm_mets$Structure_Type <- as.factor(comm_mets$Structure_Type)
comm_mets$GIS_FID <- as.factor(comm_mets$GIS_FID)
out.lm.1 <- lm(abund ~ Site * Transect_Number * Sampling_Period * Structure_Material * Reef_Type * DRR * Temp_min, data =  comm_mets)
anova(out.lm.1)
out.lm.1.5 <- lm(abund ~ Site * Transect_Number * Sampling_Period * Structure_Material * Reef_Type * DRR, data =  comm_mets)
anova(out.lm.1.5)
AIC(out.lm.1, out.lm.1.5)
out.lm.1.7 <- lm(abund ~ Site * Transect_Number * Sampling_Period * Structure_Material * Reef_Type, data =  comm_mets)
anova(out.lm.1.7)
AIC(out.lm.1, out.lm.1.7)
out.lm.1.7 <- lm(abund ~ Site * Transect_Number * Sampling_Period * Structure_Material * DRR, data =  comm_mets)
anova(out.lm.1.7)
AIC(out.lm.1, out.lm.1.7)
out.lm.2.1 <- lm(abund ~ Site * Transect_Number * Sampling_Period * Structure_Material *DRR, data =  comm_mets)
anova(out.lm.2.1)
out.lm.2.2 <- lm(sqrt(abund) ~ Site * Transect_Number * Sampling_Period * Structure_Material * DRR, data = comm_mets)
anova(out.lm.2.2)
out.lm.2.3 <- lm((abund)^(1/3) ~ Site * Transect_Number * Sampling_Period * Structure_Material * DRR, data = comm_mets)
anova(out.lm.2.3)
out.lm.2.4 <- lm((abund)^(1/4) ~ Site * Transect_Number * Sampling_Period * Structure_Material * DRR, data = comm_mets)
anova(out.lm.2.4)#AIC MUCHHHHHH lower than others
AIC(out.lm.2.1, out.lm.2.2, out.lm.2.3, out.lm.2.4)
anova(out.lm.2.4)#lowest AIC
out.lm.2.5 <- lm((abund)^(1/4) ~ Site * Transect_Number * Sampling_Period * Structure_Material, data = comm_mets)
anova(out.lm.2.5)
out.lm.3.1 <- lm((abund)^(1/4) ~ Transect_Number * Sampling_Period * Structure_Material, random = ~1|Site/GIS_FID, data = comm_mets)
out.lm.3.1 <- lme((abund)^(1/4) ~ Transect_Number * Sampling_Period * Structure_Material, random = ~1|Site/GIS_FID, data = comm_mets)
anova(out.lm.3.1)
AIC(out.lm.2.5, out.lm.3.1)
out.lm.3.1 <- lme((abund)^(1/4) ~ Transect_Number * Sampling_Period * Structure_Material, random = ~1|Site, data = comm_mets)
anova(out.lm.3.1)
AIC(out.lm.2.5,out.lm.3.1)
out4 <- lme((abund)^(1/4) ~ Transect_Number + Sampling_Period + Structure_Material, random = ~1|Site/GIS_FID, data = comm_mets)
anova(out4)
AIC(out`4)
))
AIC(out4)
''
"'''"
anova(out.lm.3.1)
