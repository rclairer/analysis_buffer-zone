library(ggplot2)
R.version()
R.Version()
library(MASS)
library(rpart.plot)
setwd("C:/Users/rclairer/Dropbox (Paxton)/Paxton Team Folder/CRFL - Artificial Reefs/Buffer_Zone/analysis_buffer-zone")
invisible(sapply(list.files(path = "R", pattern = "R$", full.names = TRUE), source)) # find functions and other dependencies in .R files
### FISH DATA ### --------------------------------------------------------------
detach("package:plyr", unload=TRUE)
library(dplyr)
library(lubridate)
library(reshape2)
fish_data <- read.csv ("Fish/4_clean_data/fish_clean_data_output.csv") #without 342 (version of new2, size bins that hayley changed, removing sites not used, removing t1_t2_t3
fish_data_str <- filter(fish_data, Transect_Type == "Structural")
fish_data_str_0 <- filter(fish_data, Transect_Number == "0")
fish_data_rad <- filter(fish_data, Transect_Type == "Radiating")
fish_data <- rbind(fish_data_str_0, fish_data_rad)
fish_data <- filter(fish_data, Species_Code != "NOFI") ###############USE IF FILTERING TRANSECTS WITH 0 FISH
#fish_data <- filter(fish_data, Transect_Number == "0" | Transect_Number == "3")##############if only 1 and 0
fish_data <- filter(fish_data, ID != "AR-364_PODS_2015-09-21_R_T2")
fish_data <- filter(fish_data, ID != "AR-378_PODS_2015-09-14_R_T1")
fish_data <- filter(fish_data, ID != "AR-364_BARGE_2015-12-10_R_T2")
fish_data <- filter(fish_data, ID != "AR-372_NR2_2015-12-09_R_T5")
fish_data <- filter(fish_data, ID != "AR-372_PODS_2015-12-09_R_T4")
fish_data <- filter(fish_data, ID != "AR-372_RB1_2015-12-09_R_T3")
fish_data <- filter(fish_data, ID != "AR-345_RB1_2015-10-15_R_T2")
fish_data <- filter(fish_data, ID != "AR-345_RB2_2015-10-15_R_T3")
fish_data <- filter(fish_data, ID != "AR-345_TITAN_2015-10-15_R_T3")
fish_meta <- combine_data_meta (data = fish_data,
file_meta = "Metadata/Fish/Fish_Codes_CRFL-AR.csv",
merge_by = "Species_Code")
fish_biom<-make_fish_biomass_col(data = fish_meta)
#fish_subset <- subset_data (data = fish_biom,
#sub_cat = "Pelagic.Demersal", #sub_cat = "Snapper.Grouper",
#sub_val = "Demersal") # YES for yes
## make fish abundance matrix
fish_biom -> data
data$group <- data[,"Species_Code"] # change to family or function_group as needed
#data$group <- data[,"Family"]
#data$group <- data[,"Functional_Group"]
#data$gruop <- data[, "Snapper.Grouper"]
#new2 <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_abund = sum(Abundance))
new2tesssssssst <- data %>% group_by(group, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_abund = sum(Abundance))
#what happens if we take out ID?
#new3 <- dcast(new2, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
new3tessssst <-  dcast(new2tesssssssst, Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
#new2biom <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_biom = sum(biomass))
new2biomtessst <- data %>% group_by(group, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_biom = sum(biomass))
#new3biom <- dcast(new2biom, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
new3biomtessst <- dcast(new2biomtessst, Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
#FOR VISIBILITY
#new2 <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number, Visibility_Min_ft) %>% summarise(data_abund = sum(Abundance))
#new3 <- dcast(new2, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number + Visibility_Min_ft ~ group)
#new3[is.na(new3)]<-0
new3tessssst[is.na(new3tessssst)]<-0
#new3biom[is.na(new3biom)] <- 0
new3biomtessst[is.na(new3biomtessst)] <- 0
#fish_abund_matrix <- new3
fish_abund_matrix <- new3tessssst
#fish_biom_matrix <- new3biom
fish_biom_matrix <- new3biomtessst
fish <- fish_abund_matrix # select either abundance or biomass matrix
fishbiom <- fish_biom_matrix
### COMPLEXITY DATA ### -------------------------------------------------------
comp <-read.table("Complexity/3_Clean_Data/comp_site_change.csv", header=T, sep=',')
### TEMPEATURE DATA ### -------------------------------------------------------
temp <-read.table("Temperature/3_Clean_Data/temp_site_change.csv", header=T, sep=',')
### SITES METADATA ### ------------------------------------------------------------
#sites <-read.table("Metadata/Sites/CRFL-AR_SITES_Master_2016-06-30_new.csv", header=T, sep=',')
sites <-read.table("Metadata/Sites/CRFL-AR_SITES_Master_2017-01-23.csv", header=T, sep=',')
### MERGE DATA ### ------------------------------------------------------------
library(plyr)
join1 <- join(fish, temp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
join2 <- join(join1, comp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
join3 <- join(join2, sites, by = c("Site", "Subsite"))
joinbiom1 <- join(fishbiom, temp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
joinbiom2 <- join(joinbiom1, comp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
joinbiom3 <- join(joinbiom2, sites, by = c("Site", "Subsite"))
#with NOFI
#join4 <- cbind(join3[,1:6], join3[,80:110], join3[,7:79]) # species
#join for species and exclusion of NOFI
join4 <- cbind(join3[,1:6], join3[,79:109], join3[,7:78]) # species NOFI excluded
joinbiom4 <- cbind(joinbiom3[,1:6], joinbiom3[,79:109], joinbiom3[,7:78]) #NOFI excluded
#join for family and exclusion of NOFI
#join4 <- cbind(join3[,1:6], join3[,33:63], join3[,7:32]) # species
#joinbiom4 <- cbind(joinbiom3[,1:6], joinbiom3[,33:63], joinbiom3[,7:32])
#join for functional group and exclusion of NOFI
#join4 <- cbind(join3[,1:6], join3[,14:44], join3[,7:13])
#joinbiom4 <- cbind(joinbiom3[,1:6], joinbiom3[,14:44], joinbiom3[,7:13])
#join4 <- cbind(join3[,1:7], join3[,81:110], join3[,8:80]) # species
#join4 <- cbind(join3[,1:6], join3[,80:110], join3[,7:79]) # species
#join4 <- cbind(join3[,1:6], join3[,79:109], join3[,7:78]) # species NOFI excluded
#join4 <- cbind(join3[,1:7], join3[,80:109], join3[,8:79]) #for exclusion of NOFI
#join4 <- cbind(join3[,1:7], join3[,79:102], join3[,8:78]) #for exclusion of 2 and 3 and no fi
#join4 <- cbind(join3[,1:7], join3[,72:95], join3[,8:71]) # for exclusion of 1 and 2
#joinbiom4 <- cbind(joinbiom3[,1:7], joinbiom3[,81:110], joinbiom3[,8:80])
#joinbiom4 <- cbind(joinbiom3[,1:6], joinbiom3[,80:110], joinbiom3[,7:79])
#joinbiom4 <- cbind(joinbiom3[,1:6], joinbiom3[,79:109], joinbiom3[,7:78]) #NOFI excluded
#joinbiom4 <- cbind(joinbiom3[,1:7], joinbiom3[,80:109], joinbiom3[,8:79])#for exclusion of NOFI
#joinbiom4 <- cbind(joinbiom3[,1:7], joinbiom3[,79:102], joinbiom3[,8:80])#for exclusion of 2 and 3
#joinbiom4 <- cbind(join3[,1:7], join3[,72:95], join3[,8:71]) # for exclusion of 1 and 2
#join4 <- cbind(join3[,1:7], join3[,36:ncol(join3)], join3[,8:35]) # family
#join4 <- cbind(join3[,1:7], join3[,16:ncol(join3)], join3[8:15]) #Functional group
#join5 <- join4[,-c(8, 12)]
join5 <- join4[,-c(11)]
#joinbiom5 <- joinbiom4[,-c(8, 12)]
joinbiom5 <- joinbiom4[,-c(11)]
data <- join5
databiom <- joinbiom5
##################################################
#data <- filter(data, Transect_Number != "2")
#data <- filter(data, Transect_Number != "3")
#data <- data[,-c(77)]
###########################################
env.end<- 36
sp.start<-37
env_data <- data[,1:env.end]
species.data<-data[,sp.start:ncol(data)] # fish data
species.orig<-species.data # fish data, no transform
species.data.biom <- databiom[,sp.start:ncol(databiom)]
species.orig.biom <- species.data.biom
#species.data <- transform_data (data = species.data, transform_type = "square_root")
#species.data.biom <- transform_data (data = species.data.biom, transform_type = "square_root")
#species.data <- transform_data (data = species.orig, transform_type = "cube_root")
#species.data <- transform_data (data = species.data, transform_type = "pres_abs")
#species.data <- transform_data (data = species.orig, transform_type = "box-cox")
#species.data.biom <- transform_data (data = species.data.biom, transform_type = "box-cox")
#write.csv(species.data, file = "Metadata/species.csv", row.names = FALSE)
#write.csv(data, file = "Metadata/data.csv", row.names = FALSE)
species.data <- transform_data (data = species.orig, transform_type = "box-cox")
library(vegan)
set.seed(318)
species.metaMDS <- metaMDS(species.data, distance = "bray", k=2, trymax = 1000, autotransform = FALSE)
stressplot(species.metaMDS) # Shepard plot
species.metaMDS$stress # stress value
plot(species.metaMDS) # rough plot
text(species.metaMDS$species[,1:2],rownames(species.metaMDS$species),cex=0.8,col="red") # add
scores <- species.metaMDS$points # scores
species.nms <- cbind(scores, env_data) # datset with scores and env data
# weighted averages for species
species.wa <- data.frame(species.metaMDS$species)
species.wa <- cbind(row.names(species.wa), species.wa)
library(plyr)
species.wa <- rename(species.wa, c("row.names(species.wa)"="species_code"))
#added and named the sp code column, the first column w/ sp names is visually but NOT functionally there
stress <- species.metaMDS$stress # save stress value
library(ecodist)
species.bcd <- bcdist(species.data, rmzero=FALSE)###### CR added this
nms.xod1 <- dist(species.nms[,1]) # pearson correlation
nms.xod2 <- dist(species.nms[,1:2]) # pearson correlation
r1<-cor(species.bcd,nms.xod1)
r2.1<-r1^2; r2.1
# axis 2 is 2-D minus 1-D solution:
r2<-cor(species.bcd,nms.xod2)
r2.2<-r2^2;
r2.2<-r2.2-r2.1
# now plot it
NMDS = data.frame(MDS1 = species.nms[,1], MDS2 = species.nms[,2]) # data frame to work with
yl<-paste("NMS 2 ", '(', as.character(round(r2.2, digits=2)*100), '%', ')', sep='') # y axis label
xl<-paste("NMS 1 ", '(', as.character(round(r2.1, digits=2)*100), '%', ')', sep='') # x axis label
title<-paste(" ", '2D stress = ', as.character(round(stress, digits=2)), '', sep='') # title
library(colorspace)
species.nms$Transect_Number <- as.factor(species.nms$Transect_Number)
make_tiff_ggplot <- function (expr, filename, ..., verbose = TRUE){
if (verbose){
message("Generating TIF: ", filename) # this tells it to talk to us and let us know that it's generating a pdf
}
tiff(file = filename, ...) # create pdf file with argument filename that you'd provide. the ... means that anything else (height, width, etc) can be put there or the user can just use the default
on.exit(dev.off()) # so do dev.off before you exit
eval.parent(substitute(print(expr))) # black magic that takes the function you're using and expresss it inside the environment and makes it go in the pdf somehow
}
library(ggplot2)
ggplot()+
coord_equal()+ # axes sizes equal
theme_bw()+ # basic theme
#geom_point(data = NMDS,
# aes(x = MDS1, y = MDS2, shape = species.nms$Transect_Number), size = 5, alpha = 0.1) +
#stat_ellipse(data = NMDS,
#aes(x=MDS1,y=MDS2,shape=species.nms$Transect_Number),
# level = 0.95, linetype=2, size =1)+
stat_ellipse(data = NMDS,
aes(x=MDS1,y=MDS2,colour=species.nms$Transect_Number),
level = 0.5, linetype=1, size =1)+
#$stat_ellipse(data = NMDS,
#$aes(x=MDS1,y=MDS2,linetype=species.nms$Transect_Number),
#$level = 0.5, size =1)+
#stat_ellipse(data = NMDS,
#aes(x=MDS1,y=MDS2,shape=species.nms$Transect_Number),
# level = 0.5, linetype=2, size =1)+
#ordihull(NMDS,groups=species.nms$Transect_Number,draw="polygon",col="grey90",label=F)+
#geom_text(data=species.wa,
# aes(x=species.wa[,2],y=species.wa[,3],label=species_code),
# alpha=0.9, # adds weighted averages for species
# position=position_jitter(width=0.1,height=0.2))+
scale_y_continuous(name=yl) + # names y axis
scale_x_continuous(name=xl) + # names x axis
theme(axis.text=element_text(size=text_size),
axis.title=element_text(size=text_size),
legend.text=element_text(color="black", size=text_size),
legend.title=element_text(color="black", size = text_size),
legend.position="bottom",
plot.title = element_text(size = text_size, hjust = 0.5))+
#title = element_text(size = text_size))+
#scale_color_discrete(name = "Distance from reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
scale_color_manual(name = "Distance from reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"), values = c("0" = "grey0", "1" = "grey25", "2" = "grey50", "3" = "grey75"))
#scale_linetype_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
#$scale_linetype_manual(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"),
#$ values = c("0" = "dashed", "1" = "twodash", "2" = "dotted", "3"= "solid"))+
#values = c("0" = 0, "1" = 1, "2" = 2, "3"= 3))+
ggtitle(title)
plot_nmds <- function (text_size){
library(ggplot2)
ggplot()+
coord_equal()+ # axes sizes equal
theme_bw()+ # basic theme
#geom_point(data = NMDS,
# aes(x = MDS1, y = MDS2, shape = species.nms$Transect_Number), size = 5, alpha = 0.1) +
#stat_ellipse(data = NMDS,
#aes(x=MDS1,y=MDS2,shape=species.nms$Transect_Number),
# level = 0.95, linetype=2, size =1)+
stat_ellipse(data = NMDS,
aes(x=MDS1,y=MDS2,colour=species.nms$Transect_Number),
level = 0.5, linetype=1, size =1)+
#$stat_ellipse(data = NMDS,
#$aes(x=MDS1,y=MDS2,linetype=species.nms$Transect_Number),
#$level = 0.5, size =1)+
#stat_ellipse(data = NMDS,
#aes(x=MDS1,y=MDS2,shape=species.nms$Transect_Number),
# level = 0.5, linetype=2, size =1)+
#ordihull(NMDS,groups=species.nms$Transect_Number,draw="polygon",col="grey90",label=F)+
#geom_text(data=species.wa,
# aes(x=species.wa[,2],y=species.wa[,3],label=species_code),
# alpha=0.9, # adds weighted averages for species
# position=position_jitter(width=0.1,height=0.2))+
scale_y_continuous(name=yl) + # names y axis
scale_x_continuous(name=xl) + # names x axis
theme(axis.text=element_text(size=text_size),
axis.title=element_text(size=text_size),
legend.text=element_text(color="black", size=text_size),
legend.title=element_text(color="black", size = text_size),
legend.position="bottom",
plot.title = element_text(size = text_size, hjust = 0.5))+
#title = element_text(size = text_size))+
#scale_color_discrete(name = "Distance from reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
scale_color_manual(name = "Distance from reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"), values = c("0" = "grey0", "1" = "grey25", "2" = "grey50", "3" = "grey75"))
#scale_linetype_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
#$scale_linetype_manual(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"),
#$ values = c("0" = "dashed", "1" = "twodash", "2" = "dotted", "3"= "solid"))+
#values = c("0" = 0, "1" = 1, "2" = 2, "3"= 3))+
ggtitle(title)
}
make_tiff_ggplot (plot_nmds(text_size=10)
,
filename = "Figures/Figs_for_paper/nmds_big_grey.tiff", width = 168, height = 80,
units = "mm", pointsize = 8.5, compression = "none",
bg = "white", res = 600, verbose = TRUE)
ggplot()+
coord_equal()+ # axes sizes equal
theme_bw()+ # basic theme
#geom_point(data = NMDS,
# aes(x = MDS1, y = MDS2, shape = species.nms$Transect_Number), size = 5, alpha = 0.1) +
#stat_ellipse(data = NMDS,
#aes(x=MDS1,y=MDS2,shape=species.nms$Transect_Number),
# level = 0.95, linetype=2, size =1)+
stat_ellipse(data = NMDS,
aes(x=MDS1,y=MDS2,colour=species.nms$Transect_Number),
level = 0.5, linetype=1, size =1)
ggplot()+
coord_equal()+ # axes sizes equal
theme_bw()+ # basic theme
#geom_point(data = NMDS,
# aes(x = MDS1, y = MDS2, shape = species.nms$Transect_Number), size = 5, alpha = 0.1) +
#stat_ellipse(data = NMDS,
#aes(x=MDS1,y=MDS2,shape=species.nms$Transect_Number),
# level = 0.95, linetype=2, size =1)+
stat_ellipse(data = NMDS,
aes(x=MDS1,y=MDS2,colour=species.nms$Transect_Number),
level = 0.5, linetype=1, size =1)+
#$stat_ellipse(data = NMDS,
#$aes(x=MDS1,y=MDS2,linetype=species.nms$Transect_Number),
#$level = 0.5, size =1)+
#stat_ellipse(data = NMDS,
#aes(x=MDS1,y=MDS2,shape=species.nms$Transect_Number),
# level = 0.5, linetype=2, size =1)+
#ordihull(NMDS,groups=species.nms$Transect_Number,draw="polygon",col="grey90",label=F)+
#geom_text(data=species.wa,
# aes(x=species.wa[,2],y=species.wa[,3],label=species_code),
# alpha=0.9, # adds weighted averages for species
# position=position_jitter(width=0.1,height=0.2))+
scale_y_continuous(name=yl) + # names y axis
scale_x_continuous(name=xl) + # names x axis
theme(axis.text=element_text(size=text_size),
axis.title=element_text(size=text_size),
legend.text=element_text(color="black", size=text_size),
legend.title=element_text(color="black", size = text_size),
legend.position="bottom",
plot.title = element_text(size = text_size, hjust = 0.5))+
#title = element_text(size = text_size))+
#scale_color_discrete(name = "Distance from reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
scale_color_manual(name = "Distance from reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"), values = c("0" = "grey0", "1" = "grey25", "2" = "grey50", "3" = "grey75"))+
#scale_linetype_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
#$scale_linetype_manual(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"),
#$ values = c("0" = "dashed", "1" = "twodash", "2" = "dotted", "3"= "solid"))+
#values = c("0" = 0, "1" = 1, "2" = 2, "3"= 3))+
ggtitle(title)
plot_nmds <- function (text_size){
library(ggplot2)
ggplot()+
coord_equal()+ # axes sizes equal
theme_bw()+ # basic theme
#geom_point(data = NMDS,
# aes(x = MDS1, y = MDS2, shape = species.nms$Transect_Number), size = 5, alpha = 0.1) +
#stat_ellipse(data = NMDS,
#aes(x=MDS1,y=MDS2,shape=species.nms$Transect_Number),
# level = 0.95, linetype=2, size =1)+
stat_ellipse(data = NMDS,
aes(x=MDS1,y=MDS2,colour=species.nms$Transect_Number),
level = 0.5, linetype=1, size =1)+
#$stat_ellipse(data = NMDS,
#$aes(x=MDS1,y=MDS2,linetype=species.nms$Transect_Number),
#$level = 0.5, size =1)+
#stat_ellipse(data = NMDS,
#aes(x=MDS1,y=MDS2,shape=species.nms$Transect_Number),
# level = 0.5, linetype=2, size =1)+
#ordihull(NMDS,groups=species.nms$Transect_Number,draw="polygon",col="grey90",label=F)+
#geom_text(data=species.wa,
# aes(x=species.wa[,2],y=species.wa[,3],label=species_code),
# alpha=0.9, # adds weighted averages for species
# position=position_jitter(width=0.1,height=0.2))+
scale_y_continuous(name=yl) + # names y axis
scale_x_continuous(name=xl) + # names x axis
theme(axis.text=element_text(size=text_size),
axis.title=element_text(size=text_size),
legend.text=element_text(color="black", size=text_size),
legend.title=element_text(color="black", size = text_size),
legend.position="bottom",
plot.title = element_text(size = text_size, hjust = 0.5))+
#title = element_text(size = text_size))+
#scale_color_discrete(name = "Distance from reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
scale_color_manual(name = "Distance from reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"), values = c("0" = "grey0", "1" = "grey25", "2" = "grey50", "3" = "grey75"))+
#scale_linetype_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
#$scale_linetype_manual(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"),
#$ values = c("0" = "dashed", "1" = "twodash", "2" = "dotted", "3"= "solid"))+
#values = c("0" = 0, "1" = 1, "2" = 2, "3"= 3))+
ggtitle(title)
}
make_tiff_ggplot (plot_nmds(text_size=10)
,
filename = "Figures/Figs_for_paper/nmds_big_grey.tiff", width = 168, height = 80,
units = "mm", pointsize = 8.5, compression = "none",
bg = "white", res = 600, verbose = TRUE)
View(fish)
setwd("C:/Users/rclairer/Dropbox (Paxton)/Paxton Team Folder/CRFL - Artificial Reefs/Buffer_Zone/analysis_buffer-zone")
invisible(sapply(list.files(path = "R", pattern = "R$", full.names = TRUE), source)) # find functions and other dependencies in .R files
### FISH DATA ### --------------------------------------------------------------
detach("package:plyr", unload=TRUE)
library(dplyr)
library(lubridate)
library(reshape2)
fish_data <- read.csv ("Fish/4_clean_data/fish_clean_data_output.csv") #without 342 (version of new2, size bins that hayley changed, removing sites not used, removing t1_t2_t3
fish_data_str <- filter(fish_data, Transect_Type == "Structural")
fish_data_str_0 <- filter(fish_data, Transect_Number == "0")
fish_data_rad <- filter(fish_data, Transect_Type == "Radiating")
fish_data <- rbind(fish_data_str_0, fish_data_rad)
#fish_data <- filter(fish_data, Species_Code != "NOFI") ###############USE IF FILTERING TRANSECTS WITH 0 FISH
#fish_data <- filter(fish_data, Transect_Number == "0" | Transect_Number == "3")##############if only 1 and 0
fish_data <- filter(fish_data, ID != "AR-364_PODS_2015-09-21_R_T2")
fish_data <- filter(fish_data, ID != "AR-378_PODS_2015-09-14_R_T1")
fish_data <- filter(fish_data, ID != "AR-364_BARGE_2015-12-10_R_T2")
fish_data <- filter(fish_data, ID != "AR-372_NR2_2015-12-09_R_T5")
fish_data <- filter(fish_data, ID != "AR-372_PODS_2015-12-09_R_T4")
fish_data <- filter(fish_data, ID != "AR-372_RB1_2015-12-09_R_T3")
fish_data <- filter(fish_data, ID != "AR-345_RB1_2015-10-15_R_T2")
fish_data <- filter(fish_data, ID != "AR-345_RB2_2015-10-15_R_T3")
fish_data <- filter(fish_data, ID != "AR-345_TITAN_2015-10-15_R_T3")
fish_meta <- combine_data_meta (data = fish_data,
file_meta = "Metadata/Fish/Fish_Codes_CRFL-AR.csv",
merge_by = "Species_Code")
fish_biom<-make_fish_biomass_col(data = fish_meta)
#fish_subset <- subset_data (data = fish_biom,
#sub_cat = "Pelagic.Demersal", #sub_cat = "Snapper.Grouper",
#sub_val = "Demersal") # YES for yes
## make fish abundance matrix
fish_biom -> data
data$group <- data[,"Species_Code"] # change to family or function_group as needed
#data$group <- data[,"Family"]
#data$group <- data[,"Functional_Group"]
#data$gruop <- data[, "Snapper.Grouper"]
#new2 <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_abund = sum(Abundance))
new2tesssssssst <- data %>% group_by(group, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_abund = sum(Abundance))
#what happens if we take out ID?
#new3 <- dcast(new2, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
new3tessssst <-  dcast(new2tesssssssst, Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
#new2biom <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_biom = sum(biomass))
new2biomtessst <- data %>% group_by(group, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_biom = sum(biomass))
#new3biom <- dcast(new2biom, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
new3biomtessst <- dcast(new2biomtessst, Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
#FOR VISIBILITY
#new2 <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number, Visibility_Min_ft) %>% summarise(data_abund = sum(Abundance))
#new3 <- dcast(new2, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number + Visibility_Min_ft ~ group)
#new3[is.na(new3)]<-0
new3tessssst[is.na(new3tessssst)]<-0
#new3biom[is.na(new3biom)] <- 0
new3biomtessst[is.na(new3biomtessst)] <- 0
#fish_abund_matrix <- new3
fish_abund_matrix <- new3tessssst
#fish_biom_matrix <- new3biom
fish_biom_matrix <- new3biomtessst
fish <- fish_abund_matrix # select either abundance or biomass matrix
fishbiom <- fish_biom_matrix
### COMPLEXITY DATA ### -------------------------------------------------------
comp <-read.table("Complexity/3_Clean_Data/comp_site_change.csv", header=T, sep=',')
### TEMPEATURE DATA ### -------------------------------------------------------
temp <-read.table("Temperature/3_Clean_Data/temp_site_change.csv", header=T, sep=',')
### SITES METADATA ### ------------------------------------------------------------
#sites <-read.table("Metadata/Sites/CRFL-AR_SITES_Master_2016-06-30_new.csv", header=T, sep=',')
sites <-read.table("Metadata/Sites/CRFL-AR_SITES_Master_2017-01-23.csv", header=T, sep=',')
### MERGE DATA ### ------------------------------------------------------------
library(plyr)
join1 <- join(fish, temp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
join2 <- join(join1, comp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
join3 <- join(join2, sites, by = c("Site", "Subsite"))
joinbiom1 <- join(fishbiom, temp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
joinbiom2 <- join(joinbiom1, comp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
joinbiom3 <- join(joinbiom2, sites, by = c("Site", "Subsite"))
#join4 <- cbind(join3[,1:7], join3[,81:110], join3[,8:80]) # species
join4 <- cbind(join3[,1:6], join3[,80:110], join3[,7:79]) # species
#join4 <- cbind(join3[,1:6], join3[,79:109], join3[,7:78]) # species NOFI excluded
#join4 <- cbind(join3[,1:7], join3[,80:109], join3[,8:79]) #for exclusion of NOFI
#join4 <- cbind(join3[,1:7], join3[,79:102], join3[,8:78]) #for exclusion of 2 and 3 and no fi
#join4 <- cbind(join3[,1:7], join3[,72:95], join3[,8:71]) # for exclusion of 1 and 2
#joinbiom4 <- cbind(joinbiom3[,1:7], joinbiom3[,81:110], joinbiom3[,8:80])
joinbiom4 <- cbind(joinbiom3[,1:6], joinbiom3[,80:110], joinbiom3[,7:79])
#joinbiom4 <- cbind(joinbiom3[,1:6], joinbiom3[,79:109], joinbiom3[,7:78]) #NOFI excluded
#joinbiom4 <- cbind(joinbiom3[,1:7], joinbiom3[,80:109], joinbiom3[,8:79])#for exclusion of NOFI
#joinbiom4 <- cbind(joinbiom3[,1:7], joinbiom3[,79:102], joinbiom3[,8:80])#for exclusion of 2 and 3
#joinbiom4 <- cbind(join3[,1:7], join3[,72:95], join3[,8:71]) # for exclusion of 1 and 2
#join4 <- cbind(join3[,1:7], join3[,36:ncol(join3)], join3[,8:35]) # family
#join4 <- cbind(join3[,1:7], join3[,16:ncol(join3)], join3[8:15]) #Functional group
#join5 <- join4[,-c(8, 12)]
join5 <- join4[,-c(11)]
#joinbiom5 <- joinbiom4[,-c(8, 12)]
joinbiom5 <- joinbiom4[,-c(11)]
data <- join5
databiom <- joinbiom5
#write.csv(data, file = "Metadata/data_for_Steve.csv", row.names = FALSE)
#write.csv(databiom, file = "Metadata/databiom_for_Steve.csv", row.names = FALSE)
env.end<- 36
sp.start<-37
env_data <- data[,1:env.end]
species.data<-data[,sp.start:ncol(data)] # fish data
species.orig<-species.data # fish data, no transform
species.data.biom <- databiom[,sp.start:ncol(databiom)]
species.orig.biom <- species.data.biom
#species.data <- transform_data (data = species.data, transform_type = "square_root")
#species.data.biom <- transform_data (data = species.data.biom, transform_type = "square_root")
#species.data <- transform_data (data = species.orig, transform_type = "cube_root")
#species.data <- transform_data (data = species.data, transform_type = "pres_abs")
#species.data <- transform_data (data = species.orig, transform_type = "box-cox")
#species.data.biom <- transform_data (data = species.data.biom, transform_type = "box-cox")
#write.csv(species.data, file = "Metadata/species.csv", row.names = FALSE)
#write.csv(data, file = "Metadata/data.csv", row.names = FALSE)
View(env_data)
testingthis <- summarySE(data = env_data, avg_dep, groupvars = c("Site", "Subsite"))
library(vegan)
S <- specnumber(species.data) # species richness (S)
shan <- diversity (species.data, index = "shannon") # shannon diversity
simp <- diversity (species.data, index = "simpson") # simpson's diversity
simp_inv <- diversity (species.data, index = "invsimpson") # inverse simpson's diversity
J <- shan / log (S) # pielou's evenness (J)
abund <- rowSums (species.data, na.rm = FALSE, dims = 1) # total abundance for each sample
biom <- rowSums (species.data.biom, na.rm = FALSE, dims = 1) # totaal biomass for each sample
comm_mets <- cbind (abund, biom, S, shan, simp, simp_inv, J, env_data)
View(comm_mets)
testingthis <- summarySE(comm_mets, measurevar = "avg_dep", groupvars = c("Site", "Subsite"))
View(testingthis)
comm_mets_test <- filter(comm_mets, Transect_Nunmber == "0")
View(comm_mets)
comm_mets_test <- filter(comm_mets, Transect_Number == "0")
comm_mets_test_na <- filter(comm_mets_test, avg_dep =! "NA")
comm_mets_test_na <- filter(comm_mets_test, avg_dep != "NA")
testingthis <- summarySE(comm_mets_test_na, measurevar = "avg_dep", groupvars = c("Site", "Subsite"))
View(testingthis)
View(comm_mets)
View(sites)
p<-colSums(species.orig, na.rm=FALSE, dims=1)
ptest<-rbind()
summary(species.orig)
sum<-apply(species.orig, 2, sum)
mean<-apply(species.orig, 2, mean)
View(fish)
stats<-cbind(sum, mean)
stats<-stats[order(-mean),]
stats<-data.frame(stats)
rownames(stats) -> stats$Species_Code
plank_table <- combine_data_meta (stats,
file_meta = "Metadata/Fish/Fish_Codes_CRFL-AR.csv",
merge_by = "Species_Code")
View(plank_table)
View(comm_mets)
View(fish)
View(species.orig)
View(species.data)
View(data)
