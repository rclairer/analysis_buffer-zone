#geom_errorbar(aes(ymin=abund-se, ymax=abund+se), width=.05, position=position_dodge(0.9))+
scale_y_continuous(name="Average Shannon's Diversity Index", limits=c(0,2), breaks=seq(0, 2, by= 0.5)) +
#scale_x_continuous(name = "Distance (km)", limits=c(0, 120), breaks=seq(0, 120,by=20)) + geom_smooth(colour = "black", fullrange = FALSE)+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
ggtitle("Average Shannon's Diversity Index per Site by Distance from Reef")
sahnpertran <- summarySE(comm_mets, measurevar = "shan", groupvars = c("Transect_Number"))
plot.all.tran.shan = ggplot(sahnpertran, aes(x=as.factor(Transect_Number), y=as.numeric(shan), group = 1))
plot.all.tran.shan +
theme_classic()+
theme(axis.text=element_text(size=16, colour="black"),
axis.title.x=element_text(size=16, colour="black", vjust=-.5),
axis.title.y=element_text(size=16, colour="black", vjust=1.3),
legend.position="none",
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))+
geom_point (colour = "grey") +
geom_line() +
geom_errorbar(aes(ymin=shan-se, ymax=shan+se), width=.05, position=position_dodge(0.9))+
scale_y_continuous(name="Average Shannon's Diversity Index", limits=c(0, 1.2), breaks=seq(0, 1.2, by=0.5)) +
#scale_x_continuous(name = "Distance (km)", limits=c(0, 120), breaks=seq(0, 120,by=20)) + geom_smooth(colour = "black", fullrange = FALSE)+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
ggtitle("Average Shannon's Diversity Index by Distance from Reef")
sahnpertran <- summarySE(comm_mets, measurevar = "shan", groupvars = c("Transect_Number"))
plot.all.tran.shan = ggplot(sahnpertran, aes(x=as.factor(Transect_Number), y=as.numeric(shan), group = 1))
plot.all.tran.shan +
theme_classic()+
theme(axis.text=element_text(size=16, colour="black"),
axis.title.x=element_text(size=16, colour="black", vjust=-.5),
axis.title.y=element_text(size=16, colour="black", vjust=1.3),
legend.position="none",
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))+
geom_point (colour = "grey") +
geom_line() +
geom_errorbar(aes(ymin=shan-se, ymax=shan+se), width=.05, position=position_dodge(0.9))+
scale_y_continuous(name="Average Shannon's Diversity Index", limits=c(0, 1.5), breaks=seq(0, 1.5, by=0.5)) +
#scale_x_continuous(name = "Distance (km)", limits=c(0, 120), breaks=seq(0, 120,by=20)) + geom_smooth(colour = "black", fullrange = FALSE)+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
ggtitle("Average Shannon's Diversity Index by Distance from Reef")
plot.all.tran.shan +
theme_classic()+
theme(axis.text=element_text(size=16, colour="black"),
axis.title.x=element_text(size=16, colour="black", vjust=-.5),
axis.title.y=element_text(size=16, colour="black", vjust=1.3),
legend.position="none",
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))+
geom_point (colour = "grey") +
geom_line() +
geom_errorbar(aes(ymin=shan-se, ymax=shan+se), width=.05, position=position_dodge(0.9))+
scale_y_continuous(name="Average Shannon's Diversity Index", limits=c(0, 2), breaks=seq(0, 2, by=0.5)) +
#scale_x_continuous(name = "Distance (km)", limits=c(0, 120), breaks=seq(0, 120,by=20)) + geom_smooth(colour = "black", fullrange = FALSE)+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
ggtitle("Average Shannon's Diversity Index by Distance from Reef")
richsssss <- summarySE(comm_mets, measurevar = "S", groupvars = c("GIS_FID","Transect_Number"))
plot.all.rich = ggplot(richsssss, aes(x=as.factor(Transect_Number), y=as.numeric(S))) #this graph plots the average- after fourth root transform- abundnace per site, with geom_line connecting the points
plot.all.rich +
theme_classic()+
theme(axis.text=element_text(size=16, colour="black"),
axis.title.x=element_text(size=16, colour="black", vjust=-.5),
axis.title.y=element_text(size=16, colour="black", vjust=1.3),
legend.position="none",
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))+
#abline(lm(abund ~ as.numeric(Transect_Number), data= abundanceddd))+
#geom_point (colour = "grey") +
# geom_point (aes(colour = GIS_FID)) +
geom_point()+
geom_line(aes(group = GIS_FID))+
# geom_smooth (aes(colour = GIS_FID)) +
#geom_errorbar(aes(ymin=abund-se, ymax=abund+se), width=.05, position=position_dodge(0.9))+
scale_y_continuous(name="Average Species Richness", limits=c(0,11), breaks=seq(0, 11, by= 2)) +
#scale_x_continuous(name = "Distance (km)", limits=c(0, 120), breaks=seq(0, 120,by=20)) + geom_smooth(colour = "black", fullrange = FALSE)+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
ggtitle("Average Species Richness per Site by Distance from Reef")
richpertran <- summarySE(comm_mets, measurevar = "S", groupvars = c("Transect_Number"))
plot.all.tran.rich = ggplot(richpertran, aes(x=as.factor(Transect_Number), y=as.numeric(S), group = 1))
plot.all.tran.rich +
theme_classic()+
theme(axis.text=element_text(size=16, colour="black"),
axis.title.x=element_text(size=16, colour="black", vjust=-.5),
axis.title.y=element_text(size=16, colour="black", vjust=1.3),
legend.position="none",
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))+
geom_point (colour = "grey") +
geom_line() +
geom_errorbar(aes(ymin=S-se, ymax=S+se), width=.05, position=position_dodge(0.9))+
scale_y_continuous(name="Average Species Richness", limits=c(0, 9), breaks=seq(0, 9, by=2)) +
#scale_x_continuous(name = "Distance (km)", limits=c(0, 120), breaks=seq(0, 120,by=20)) + geom_smooth(colour = "black", fullrange = FALSE)+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
ggtitle("Average Species Richness by Distance from Reef")
evenssss <- summarySE(comm_mets, measurevar = "J", groupvars = c("GIS_FID","Transect_Number"))
plot.all.even = ggplot(evenssss, aes(x=as.factor(Transect_Number), y=as.numeric(J))) #this graph plots the average- after fourth root transform- abundnace per site, with geom_line connecting the points
plot.all.even +
theme_classic()+
theme(axis.text=element_text(size=16, colour="black"),
axis.title.x=element_text(size=16, colour="black", vjust=-.5),
axis.title.y=element_text(size=16, colour="black", vjust=1.3),
legend.position="none",
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))+
#abline(lm(abund ~ as.numeric(Transect_Number), data= abundanceddd))+
#geom_point (colour = "grey") +
# geom_point (aes(colour = GIS_FID)) +
geom_point()+
geom_line(aes(group = GIS_FID))+
# geom_smooth (aes(colour = GIS_FID)) +
#geom_errorbar(aes(ymin=abund-se, ymax=abund+se), width=.05, position=position_dodge(0.9))+
scale_y_continuous(name="Average Species Evenness", limits=c(0,1), breaks=seq(0, 1, by= 0.2)) +
#scale_x_continuous(name = "Distance (km)", limits=c(0, 120), breaks=seq(0, 120,by=20)) + geom_smooth(colour = "black", fullrange = FALSE)+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
ggtitle("Average Species Evenness per Site by Distance from Reef")
plot.all.even +
theme_classic()+
theme(axis.text=element_text(size=16, colour="black"),
axis.title.x=element_text(size=16, colour="black", vjust=-.5),
axis.title.y=element_text(size=16, colour="black", vjust=1.3),
legend.position="none",
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))+
#abline(lm(abund ~ as.numeric(Transect_Number), data= abundanceddd))+
#geom_point (colour = "grey") +
# geom_point (aes(colour = GIS_FID)) +
geom_point()+
geom_line(aes(group = GIS_FID))+
# geom_smooth (aes(colour = GIS_FID)) +
#geom_errorbar(aes(ymin=abund-se, ymax=abund+se), width=.05, position=position_dodge(0.9))+
scale_y_continuous(name="Average Species Evenness", limits=c(0,10), breaks=seq(0, 10, by= 0.2)) +
#scale_x_continuous(name = "Distance (km)", limits=c(0, 120), breaks=seq(0, 120,by=20)) + geom_smooth(colour = "black", fullrange = FALSE)+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
ggtitle("Average Species Evenness per Site by Distance from Reef")
comm_mets_test <- filter(comm_mets, J != 'NaN')
evenpertran <- summarySE(comm_mets_test, measurevar = "J", groupvars = c("Transect_Number"))
plot.all.tran.even = ggplot(evenpertran, aes(x=as.factor(Transect_Number), y=as.numeric(J), group = 1))
plot.all.tran.even +
theme_classic()+
theme(axis.text=element_text(size=16, colour="black"),
axis.title.x=element_text(size=16, colour="black", vjust=-.5),
axis.title.y=element_text(size=16, colour="black", vjust=1.3),
legend.position="none",
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))+
geom_point (colour = "grey") +
geom_line() +
geom_errorbar(aes(ymin=J-se, ymax=J+se), width=.05, position=position_dodge(0.9))+
scale_y_continuous(name="Average Species Evenness", limits=c(0, 1), breaks=seq(0, 1, by=0.2)) +
#scale_x_continuous(name = "Distance (km)", limits=c(0, 120), breaks=seq(0, 120,by=20)) + geom_smooth(colour = "black", fullrange = FALSE)+
scale_x_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
ggtitle("Average Species Evenness by Distance from Reef")
species.data <- transform_data (data = species.orig, transform_type = "box-cox")
species.data.biom <- transform_data (data = species.orig.biom, transform_type = "box-cox")
#species.data <- transform_data (data = species.orig, transform_type = "log + 1")
library(vegan)
set.seed(318)
env_data$Transect_Number <- as.factor(env_data$Transect_Number)
env_data$Site <- as.factor(env_data$Site)
env_data$Sampling_Period <- as.factor(env_data$Sampling_Period)
env_data$Reef_Type <- as.factor(env_data$Reef_Type)
env_data$Structure_Material <- as.factor(env_data$Structure_Material)
permanova.everything2 <- adonis (species.data ~ Transect_Number + Sampling_Period + Site + Reef_Type + Structure_Material, env_data, permutations = 999, method = "bray")
permanova.everything2
library(vegan)
set.seed(318)
species.metaMDS <- metaMDS(species.data, distance = "bray", k=2, trymax = 1000, autotransform = FALSE)
stressplot(species.metaMDS) # Shepard plot
species.metaMDS$stress # stress value
plot(species.metaMDS) # rough plot
text(species.metaMDS$species[,1:2],rownames(species.metaMDS$species),cex=0.8,col="red") # add species labels to the plot (weighted averages)
scores <- species.metaMDS$points # scores
species.nms <- cbind(scores, env_data) # datset with scores and env data
species.wa <- data.frame(species.metaMDS$species)
species.wa <- cbind(row.names(species.wa), species.wa)
library(plyr)
species.wa <- rename(species.wa, c("row.names(species.wa)"="species_code"))
#added and named the sp code column, the first column w/ sp names is visually but NOT functionally there
stress <- species.metaMDS$stress # save stress value
library(ecodist)
species.bcd <- bcdist(species.data, rmzero=FALSE)###### CR added this
nms.xod1 <- dist(species.nms[,1]) # pearson correlation
nms.xod2 <- dist(species.nms[,1:2]) # pearson correlation
r1<-cor(species.bcd,nms.xod1)
r2.1<-r1^2; r2.1
# axis 2 is 2-D minus 1-D solution:
r2<-cor(species.bcd,nms.xod2)
r2.2<-r2^2;
r2.2<-r2.2-r2.1
NMDS = data.frame(MDS1 = species.nms[,1], MDS2 = species.nms[,2]) # data frame to work with
yl<-paste("NMS 2 ", '(', as.character(round(r2.2, digits=2)*100), '%', ')', sep='') # y axis label
xl<-paste("NMS 1 ", '(', as.character(round(r2.1, digits=2)*100), '%', ')', sep='') # x axis label
title<-paste(" ", 'stress = ', as.character(round(stress, digits=2)), '', sep='') # title
library(colorspace)
species.nms$Transect_Number <- as.factor(species.nms$Transect_Number)
library(ggplot2)
ggplot()+
coord_equal()+ # axes sizes equal
theme_bw()+ # basic theme
#geom_point(data = NMDS,
#aes(x = MDS1, y = MDS2, shape = species.nms$Transect_Number), size = 5) +
#stat_ellipse(data = NMDS,
#aes(x=MDS1,y=MDS2,shape=species.nms$Transect_Number),
# level = 0.95, linetype=2, size =1)+
stat_ellipse(data = NMDS,
aes(x=MDS1,y=MDS2,linetype=species.nms$Transect_Number),
level = 0.5, size =1)+
# stat_ellipse(data = NMDS,
# aes(x=MDS1,y=MDS2,shape=species.nms$Transect_Number),
# level = 0.5, linetype=2, size =1)+
#ordihull(NMDS,groups=species.nms$Transect_Number,draw="polygon",col="grey90",label=F)+
#geom_text(data=species.wa,
# aes(x=species.wa[,2],y=species.wa[,3],label=species_code),
# alpha=0.9, # adds weighted averages for species
# position=position_jitter(width=0.1,height=0.2))+
scale_y_continuous(name=yl) + # names y axis
scale_x_continuous(name=xl) + # names x axis
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
legend.text=element_text(color="black", size=16),
legend.title=element_text(color="black", size = 16),
legend.position="bottom") +
#scale_linetype_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
scale_linetype_manual(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"),
values = c("0" = "dashed", "1" = "dotdash", "2" = "dotted", "3"= "solid"))+
#values = c("0" = 0, "1" = 1, "2" = 2, "3"= 3))+
ggtitle(title)
detach("package:plyr", unload=TRUE)
library(dplyr)
library(lubridate)
library(reshape2)
fish_data <- read.csv ("Fish/4_clean_data/fish_clean_data_output.csv") #without 342 (version of new2, size bins that hayley changed, removing sites not used, removing t1_t2_t3
fish_data_str <- filter(fish_data, Transect_Type == "Structural")
fish_data_str_0 <- filter(fish_data, Transect_Number == "0")
fish_data_rad <- filter(fish_data, Transect_Type == "Radiating")
fish_data <- rbind(fish_data_str_0, fish_data_rad)
fish_data <- filter(fish_data, Species_Code != "NOFI") ###############USE IF FILTERING TRANSECTS WITH 0 FISH
#fish_data <- filter(fish_data, Transect_Number == "0" | Transect_Number == "3")##############if only 1 and 0
fish_data <- filter(fish_data, ID != "AR-364_PODS_2015-09-21_R_T2")
fish_data <- filter(fish_data, ID != "AR-378_PODS_2015-09-14_R_T1")
fish_data <- filter(fish_data, ID != "AR-364_BARGE_2015-12-10_R_T2")
fish_data <- filter(fish_data, ID != "AR-372_NR2_2015-12-09_R_T5")
fish_data <- filter(fish_data, ID != "AR-372_PODS_2015-12-09_R_T4")
fish_data <- filter(fish_data, ID != "AR-372_RB1_2015-12-09_R_T3")
fish_data <- filter(fish_data, ID != "AR-345_RB1_2015-10-15_R_T2")
fish_data <- filter(fish_data, ID != "AR-345_RB2_2015-10-15_R_T3")
fish_data <- filter(fish_data, ID != "AR-345_TITAN_2015-10-15_R_T3")
fish_meta <- combine_data_meta (data = fish_data,
file_meta = "Metadata/Fish/Fish_Codes_CRFL-AR.csv",
merge_by = "Species_Code")
fish_biom<-make_fish_biomass_col(data = fish_meta)
#fish_subset <- subset_data (data = fish_biom,
#sub_cat = "Pelagic.Demersal", #sub_cat = "Snapper.Grouper",
#sub_val = "Demersal") # YES for yes
## make fish abundance matrix
fish_biom -> data
data$group <- data[,"Species_Code"] # change to family or function_group as needed
#data$group <- data[,"Family"]
#data$group <- data[,"Functional_Group"]
#data$gruop <- data[, "Snapper.Grouper"]
#new2 <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_abund = sum(Abundance))
new2tesssssssst <- data %>% group_by(group, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_abund = sum(Abundance))
#what happens if we take out ID?
#new3 <- dcast(new2, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
new3tessssst <-  dcast(new2tesssssssst, Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
#new2biom <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_biom = sum(biomass))
new2biomtessst <- data %>% group_by(group, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_biom = sum(biomass))
#new3biom <- dcast(new2biom, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
new3biomtessst <- dcast(new2biomtessst, Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
#FOR VISIBILITY
#new2 <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number, Visibility_Min_ft) %>% summarise(data_abund = sum(Abundance))
#new3 <- dcast(new2, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number + Visibility_Min_ft ~ group)
#new3[is.na(new3)]<-0
new3tessssst[is.na(new3tessssst)]<-0
#new3biom[is.na(new3biom)] <- 0
new3biomtessst[is.na(new3biomtessst)] <- 0
#fish_abund_matrix <- new3
fish_abund_matrix <- new3tessssst
#fish_biom_matrix <- new3biom
fish_biom_matrix <- new3biomtessst
fish <- fish_abund_matrix # select either abundance or biomass matrix
fishbiom <- fish_biom_matrix
### COMPLEXITY DATA ### -------------------------------------------------------
comp <-read.table("Complexity/3_Clean_Data/comp_site_change.csv", header=T, sep=',')
### TEMPEATURE DATA ### -------------------------------------------------------
temp <-read.table("Temperature/3_Clean_Data/temp_site_change.csv", header=T, sep=',')
### SITES METADATA ### ------------------------------------------------------------
#sites <-read.table("Metadata/Sites/CRFL-AR_SITES_Master_2016-06-30_new.csv", header=T, sep=',')
sites <-read.table("Metadata/Sites/CRFL-AR_SITES_Master_2017-01-23.csv", header=T, sep=',')
### MERGE DATA ### ------------------------------------------------------------
library(plyr)
join1 <- join(fish, temp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
join2 <- join(join1, comp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
join3 <- join(join2, sites, by = c("Site", "Subsite"))
joinbiom1 <- join(fishbiom, temp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
joinbiom2 <- join(joinbiom1, comp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
joinbiom3 <- join(joinbiom2, sites, by = c("Site", "Subsite"))
names(join3)
join4 <- cbind(join3[,1:6], join3[,79:108], join3[,7:78]) # species NOFI excluded
names(joinbiom3)
joinbiom4 <- cbind(joinbiom3[,1:6], joinbiom3[,79:108], joinbiom3[,7:78]) #NOFI excluded
names(join4)
join5 <- join4[,-c(11)]
#joinbiom5 <- joinbiom4[,-c(8, 12)]
joinbiom5 <- joinbiom4[,-c(11)]
names(join5)
data <- join5
databiom <- joinbiom5
env.end<- 35
sp.start<-36
env_data <- data[,1:env.end]
species.data<-data[,sp.start:ncol(data)] # fish data
species.orig<-species.data # fish data, no transform
species.data.biom <- databiom[,sp.start:ncol(databiom)]
species.orig.biom <- species.data.biom
#species.data <- transform_data (data = species.data, transform_type = "square_root")
#species.data.biom <- transform_data (data = species.data.biom, transform_type = "square_root")
#species.data <- transform_data (data = species.orig, transform_type = "cube_root")
#species.data <- transform_data (data = species.data, transform_type = "pres_abs")
species.data <- transform_data (data = species.orig, transform_type = "box-cox")
species.data.biom <- transform_data (data = species.orig.biom, transform_type = "box-cox")
#species.data <- transform_data (data = species.orig, transform_type = "log + 1")
library(vegan)
set.seed(318)
env_data$Transect_Number <- as.factor(env_data$Transect_Number)
env_data$Site <- as.factor(env_data$Site)
env_data$Sampling_Period <- as.factor(env_data$Sampling_Period)
env_data$Reef_Type <- as.factor(env_data$Reef_Type)
env_data$Structure_Material <- as.factor(env_data$Structure_Material)
permanova.everything2 <- adonis (species.data ~ Transect_Number + Sampling_Period + Site + Reef_Type + Structure_Material, env_data, permutations = 999, method = "bray")
permanova.everything2
library(vegan)
set.seed(318)
species.metaMDS <- metaMDS(species.data, distance = "bray", k=2, trymax = 1000, autotransform = FALSE)
stressplot(species.metaMDS) # Shepard plot
species.metaMDS$stress # stress value
plot(species.metaMDS) # rough plot
text(species.metaMDS$species[,1:2],rownames(species.metaMDS$species),cex=0.8,col="red") # add
species.wa <- data.frame(species.metaMDS$species)
species.wa <- cbind(row.names(species.wa), species.wa)
library(plyr)
species.wa <- rename(species.wa, c("row.names(species.wa)"="species_code"))
#added and named the sp code column, the first column w/ sp names is visually but NOT functionally there
stress <- species.metaMDS$stress # save stress value
library(ecodist)
species.bcd <- bcdist(species.data, rmzero=FALSE)###### CR added this
nms.xod1 <- dist(species.nms[,1]) # pearson correlation
nms.xod2 <- dist(species.nms[,1:2]) # pearson correlation
r1<-cor(species.bcd,nms.xod1)
r2.1<-r1^2; r2.1
# axis 2 is 2-D minus 1-D solution:
r2<-cor(species.bcd,nms.xod2)
r2.2<-r2^2;
r2.2<-r2.2-r2.1
setwd("C:/Users/rclairer/Dropbox (Paxton)/Paxton Team Folder/CRFL - Artificial Reefs/Buffer_Zone/analysis_buffer-zone")
invisible(sapply(list.files(path = "R", pattern = "R$", full.names = TRUE), source)) # find functions and other dependencies in .R files
detach("package:plyr", unload=TRUE)
library(dplyr)
library(lubridate)
library(reshape2)
fish_data <- read.csv ("Fish/4_clean_data/fish_clean_data_output.csv") #without 342 (version of new2, size bins that hayley changed, removing sites not used, removing t1_t2_t3
fish_data_str <- filter(fish_data, Transect_Type == "Structural")
fish_data_str_0 <- filter(fish_data, Transect_Number == "0")
fish_data_rad <- filter(fish_data, Transect_Type == "Radiating")
fish_data <- rbind(fish_data_str_0, fish_data_rad)
fish_data <- filter(fish_data, Species_Code != "NOFI") ###############USE IF FILTERING TRANSECTS WITH 0 FISH
#fish_data <- filter(fish_data, Transect_Number == "0" | Transect_Number == "3")##############if only 1 and 0
fish_data <- filter(fish_data, ID != "AR-364_PODS_2015-09-21_R_T2")
fish_data <- filter(fish_data, ID != "AR-378_PODS_2015-09-14_R_T1")
fish_data <- filter(fish_data, ID != "AR-364_BARGE_2015-12-10_R_T2")
fish_data <- filter(fish_data, ID != "AR-372_NR2_2015-12-09_R_T5")
fish_data <- filter(fish_data, ID != "AR-372_PODS_2015-12-09_R_T4")
fish_data <- filter(fish_data, ID != "AR-372_RB1_2015-12-09_R_T3")
fish_data <- filter(fish_data, ID != "AR-345_RB1_2015-10-15_R_T2")
fish_data <- filter(fish_data, ID != "AR-345_RB2_2015-10-15_R_T3")
fish_data <- filter(fish_data, ID != "AR-345_TITAN_2015-10-15_R_T3")
fish_meta <- combine_data_meta (data = fish_data,
file_meta = "Metadata/Fish/Fish_Codes_CRFL-AR.csv",
merge_by = "Species_Code")
fish_biom<-make_fish_biomass_col(data = fish_meta)
#fish_subset <- subset_data (data = fish_biom,
#sub_cat = "Pelagic.Demersal", #sub_cat = "Snapper.Grouper",
#sub_val = "Demersal") # YES for yes
## make fish abundance matrix
fish_biom -> data
data$group <- data[,"Species_Code"] # change to family or function_group as needed
#data$group <- data[,"Family"]
#data$group <- data[,"Functional_Group"]
#data$gruop <- data[, "Snapper.Grouper"]
#new2 <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_abund = sum(Abundance))
new2tesssssssst <- data %>% group_by(group, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_abund = sum(Abundance))
#what happens if we take out ID?
#new3 <- dcast(new2, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
new3tessssst <-  dcast(new2tesssssssst, Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
#new2biom <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_biom = sum(biomass))
new2biomtessst <- data %>% group_by(group, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number) %>% summarise(data_biom = sum(biomass))
#new3biom <- dcast(new2biom, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
new3biomtessst <- dcast(new2biomtessst, Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number ~ group)
#FOR VISIBILITY
#new2 <- data %>% group_by(group, ID, Site, Subsite, Date, Transect_Type, Sampling_Period, Transect_Number, Visibility_Min_ft) %>% summarise(data_abund = sum(Abundance))
#new3 <- dcast(new2, ID + Site + Subsite + Date + Transect_Type + Sampling_Period + Transect_Number + Visibility_Min_ft ~ group)
#new3[is.na(new3)]<-0
new3tessssst[is.na(new3tessssst)]<-0
#new3biom[is.na(new3biom)] <- 0
new3biomtessst[is.na(new3biomtessst)] <- 0
#fish_abund_matrix <- new3
fish_abund_matrix <- new3tessssst
#fish_biom_matrix <- new3biom
fish_biom_matrix <- new3biomtessst
fish <- fish_abund_matrix # select either abundance or biomass matrix
fishbiom <- fish_biom_matrix
### COMPLEXITY DATA ### -------------------------------------------------------
comp <-read.table("Complexity/3_Clean_Data/comp_site_change.csv", header=T, sep=',')
### TEMPEATURE DATA ### -------------------------------------------------------
temp <-read.table("Temperature/3_Clean_Data/temp_site_change.csv", header=T, sep=',')
### SITES METADATA ### ------------------------------------------------------------
#sites <-read.table("Metadata/Sites/CRFL-AR_SITES_Master_2016-06-30_new.csv", header=T, sep=',')
sites <-read.table("Metadata/Sites/CRFL-AR_SITES_Master_2017-01-23.csv", header=T, sep=',')
### MERGE DATA ### ------------------------------------------------------------
library(plyr)
join1 <- join(fish, temp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
join2 <- join(join1, comp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
join3 <- join(join2, sites, by = c("Site", "Subsite"))
joinbiom1 <- join(fishbiom, temp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
joinbiom2 <- join(joinbiom1, comp, by = c("Site", "Subsite", "Date", "Transect_Type","Transect_Number"))
joinbiom3 <- join(joinbiom2, sites, by = c("Site", "Subsite"))
join4 <- cbind(join3[,1:6], join3[,79:108], join3[,7:78]) # species NOFI excluded
joinbiom4 <- cbind(joinbiom3[,1:6], joinbiom3[,79:108], joinbiom3[,7:78]) #NOFI excluded
join5 <- join4[,-c(11)]
#joinbiom5 <- joinbiom4[,-c(8, 12)]
joinbiom5 <- joinbiom4[,-c(11)]
data <- join5
databiom <- joinbiom5
env.end<- 35
sp.start<-36
env_data <- data[,1:env.end]
species.data<-data[,sp.start:ncol(data)] # fish data
species.orig<-species.data # fish data, no transform
species.data.biom <- databiom[,sp.start:ncol(databiom)]
species.orig.biom <- species.data.biom
#species.data <- transform_data (data = species.data, transform_type = "square_root")
#species.data.biom <- transform_data (data = species.data.biom, transform_type = "square_root")
#species.data <- transform_data (data = species.orig, transform_type = "cube_root")
species.data <- transform_data (data = species.orig, transform_type = "box-cox")
species.data.biom <- transform_data (data = species.orig.biom, transform_type = "box-cox")
library(vegan)
set.seed(318)
species.metaMDS <- metaMDS(species.data, distance = "bray", k=2, trymax = 1000, autotransform = FALSE)
stressplot(species.metaMDS) # Shepard plot
species.metaMDS$stress # stress value
plot(species.metaMDS) # rough plot
text(species.metaMDS$species[,1:2],rownames(species.metaMDS$species),cex=0.8,col="red") # add species labels to the plot (weighted averages)
## references
# https://cran.r-project.org/web/packages/vegan/vignettes/intro-vegan.pdf
# https://jonlefcheck.net/2012/10/24/nmds-tutorial-in-r/
# http://strata.uga.edu/6370/lecturenotes/multidimensionalScaling.html
# extract info neccessary for polished plotting
scores <- species.metaMDS$points # scores
species.nms <- cbind(scores, env_data) # datset with scores and env data
# weighted averages for species
species.wa <- data.frame(species.metaMDS$species)
species.wa <- cbind(row.names(species.wa), species.wa)
library(plyr)
species.wa <- rename(species.wa, c("row.names(species.wa)"="species_code"))
#added and named the sp code column, the first column w/ sp names is visually but NOT functionally there
stress <- species.metaMDS$stress # save stress value
library(ecodist)
species.bcd <- bcdist(species.data, rmzero=FALSE)###### CR added this
nms.xod1 <- dist(species.nms[,1]) # pearson correlation
nms.xod2 <- dist(species.nms[,1:2]) # pearson correlation
r1<-cor(species.bcd,nms.xod1)
r2.1<-r1^2; r2.1
# axis 2 is 2-D minus 1-D solution:
r2<-cor(species.bcd,nms.xod2)
r2.2<-r2^2;
r2.2<-r2.2-r2.1
NMDS = data.frame(MDS1 = species.nms[,1], MDS2 = species.nms[,2]) # data frame to work with
yl<-paste("NMS 2 ", '(', as.character(round(r2.2, digits=2)*100), '%', ')', sep='') # y axis label
xl<-paste("NMS 1 ", '(', as.character(round(r2.1, digits=2)*100), '%', ')', sep='') # x axis label
title<-paste(" ", 'stress = ', as.character(round(stress, digits=2)), '', sep='') # title
library(colorspace)
species.nms$Transect_Number <- as.factor(species.nms$Transect_Number)
library(ggplot2)
ggplot()+
coord_equal()+ # axes sizes equal
theme_bw()+ # basic theme
#geom_point(data = NMDS,
#aes(x = MDS1, y = MDS2, shape = species.nms$Transect_Number), size = 5) +
#stat_ellipse(data = NMDS,
#aes(x=MDS1,y=MDS2,shape=species.nms$Transect_Number),
# level = 0.95, linetype=2, size =1)+
stat_ellipse(data = NMDS,
aes(x=MDS1,y=MDS2,linetype=species.nms$Transect_Number),
level = 0.5, size =1)+
# stat_ellipse(data = NMDS,
# aes(x=MDS1,y=MDS2,shape=species.nms$Transect_Number),
# level = 0.5, linetype=2, size =1)+
#ordihull(NMDS,groups=species.nms$Transect_Number,draw="polygon",col="grey90",label=F)+
#geom_text(data=species.wa,
# aes(x=species.wa[,2],y=species.wa[,3],label=species_code),
# alpha=0.9, # adds weighted averages for species
# position=position_jitter(width=0.1,height=0.2))+
scale_y_continuous(name=yl) + # names y axis
scale_x_continuous(name=xl) + # names x axis
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
legend.text=element_text(color="black", size=16),
legend.title=element_text(color="black", size = 16),
legend.position="bottom") +
#scale_linetype_discrete(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"))+
scale_linetype_manual(name = "Distance from Reef", labels = c("0" = "Reef", "1" = "0-30 m", "2" = "30-60 m", "3" = "60-90 m"),
values = c("0" = "dashed", "1" = "dotdash", "2" = "dotted", "3"= "solid"))+
#values = c("0" = 0, "1" = 1, "2" = 2, "3"= 3))+
ggtitle(title)
